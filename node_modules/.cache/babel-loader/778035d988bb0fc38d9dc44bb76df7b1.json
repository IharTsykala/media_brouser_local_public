{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport { css } from \"styled-components\";\nimport { focusRingBorderStyle, focusRingStyle } from \"../focusRing\";\nimport { getResponsiveProp, rem, responsive } from \"../helpers\";\nvar ROOT_STYLE = css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  &:not([hidden]) {\\n    display: flex;\\n  }\\n\"])));\n\nfunction textInputRootStyle() {\n  return ROOT_STYLE;\n}\n\nfunction textInputBaseStyle(props) {\n  var theme = props.theme,\n      $weight = props.$weight;\n  var font = theme.sanity.fonts.text;\n  var color = theme.sanity.color.input;\n  return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    --input-fg-color: \", \";\\n    --input-placeholder-color: \", \";\\n\\n    appearance: none;\\n    background: none;\\n    border: 0;\\n    border-radius: 0;\\n    outline: none;\\n    width: 100%;\\n    box-sizing: border-box;\\n    font-family: \", \";\\n    font-weight: \", \";\\n    margin: 0;\\n    position: relative;\\n    z-index: 1;\\n    display: block;\\n    color: var(--input-fg-color);\\n\\n    /* NOTE: This is a hack to disable Chrome\\u2019s autofill styles */\\n    &:-webkit-autofill,\\n    &:-webkit-autofill:hover,\\n    &:-webkit-autofill:focus,\\n    &:-webkit-autofill:active {\\n      -webkit-text-fill-color: var(--input-fg-color) !important;\\n      transition: background-color 5000s;\\n      transition-delay: 86400s /* 24h */;\\n    }\\n\\n    &::placeholder {\\n      color: var(--input-placeholder-color);\\n    }\\n\\n    /* &:is(textarea) */\\n    &[data-as='textarea'] {\\n      resize: none;\\n    }\\n\\n    /* enabled */\\n    &:not(:invalid):not(:disabled):not(:read-only) {\\n      --input-fg-color: \", \";\\n      --input-placeholder-color: \", \";\\n    }\\n\\n    /* disabled */\\n    &:not(:invalid):disabled {\\n      --input-fg-color: \", \";\\n      --input-placeholder-color: \", \";\\n    }\\n\\n    /* invalid */\\n    &:invalid {\\n      --input-fg-color: \", \";\\n      --input-placeholder-color: \", \";\\n    }\\n\\n    /* readOnly */\\n    &:read-only {\\n      --input-fg-color: \", \";\\n      --input-placeholder-color: \", \";\\n    }\\n  \"])), color.default.enabled.fg, color.default.enabled.placeholder, font.family, $weight && font.weights[$weight] || font.weights.regular, color.default.enabled.fg, color.default.enabled.placeholder, color.default.disabled.fg, color.default.disabled.placeholder, color.invalid.enabled.fg, color.invalid.enabled.placeholder, color.default.readOnly.fg, color.default.readOnly.placeholder);\n}\n\nfunction textInputFontSizeStyle(props) {\n  var theme = props.theme;\n  var _theme$sanity = theme.sanity,\n      fonts = _theme$sanity.fonts,\n      media = _theme$sanity.media;\n  return responsive(media, getResponsiveProp(props.$fontSize, [2]), function (sizeIndex) {\n    var size = fonts.text.sizes[sizeIndex] || fonts.text.sizes[2];\n    return {\n      fontSize: rem(size.fontSize),\n      lineHeight: size.lineHeight / size.fontSize\n    };\n  });\n}\n\nfunction textInputRepresentationStyle(props) {\n  var $border = props.$border,\n      $hasPrefix = props.$hasPrefix,\n      $hasSuffix = props.$hasSuffix,\n      theme = props.theme;\n  var _theme$sanity2 = theme.sanity,\n      focusRing = _theme$sanity2.focusRing,\n      input = _theme$sanity2.input;\n  var color = theme.sanity.color.input;\n  return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    --card-bg-color: \", \";\\n    --card-fg-color: \", \";\\n    --input-box-shadow: none;\\n\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    display: block;\\n    pointer-events: none;\\n    z-index: 0;\\n    background-color: var(--card-bg-color);\\n    box-shadow: var(--input-box-shadow);\\n\\n    border-top-left-radius: \", \";\\n    border-bottom-left-radius: \", \";\\n    border-top-right-radius: \", \";\\n    border-bottom-right-radius: \", \";\\n\\n    /* enabled */\\n    *:not(:disabled) + && {\\n      --input-box-shadow: \", \";\\n    }\\n\\n    /* invalid */\\n    *:not(:disabled):invalid + && {\\n      --card-bg-color: \", \";\\n      --card-fg-color: \", \";\\n      --input-box-shadow: \", \";\\n    }\\n\\n    /* focused */\\n    *:not(:disabled):focus + && {\\n      --input-box-shadow: \", \";\\n    }\\n\\n    /* disabled */\\n    *:disabled + && {\\n      --card-bg-color: \", \";\\n      --card-fg-color: \", \";\\n      --input-box-shadow: \", \";\\n    }\\n\\n    /* hovered */\\n    @media (hover: hover) {\\n      *:not(:disabled):not(:read-only):not(:invalid):hover + && {\\n        --card-bg-color: \", \";\\n        --card-fg-color: \", \";\\n      }\\n\\n      *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + && {\\n        --input-box-shadow: \", \";\\n      }\\n    }\\n\\n    /* readOnly */\\n    *:read-only + && {\\n      --card-bg-color: \", \";\\n      --card-fg-color: \", \";\\n    }\\n  \"])), color.default.enabled.bg, color.default.enabled.fg, $hasPrefix ? 0 : void 0, $hasPrefix ? 0 : void 0, $hasSuffix ? 0 : void 0, $hasSuffix ? 0 : void 0, $border ? focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  }) : void 0, color.invalid.enabled.bg, color.invalid.enabled.fg, $border ? focusRingBorderStyle({\n    color: color.invalid.enabled.border,\n    width: input.border.width\n  }) : \"none\", focusRingStyle({\n    border: $border ? {\n      color: color.default.enabled.border,\n      width: input.border.width\n    } : void 0,\n    focusRing: focusRing\n  }), color.default.disabled.bg, color.default.disabled.fg, $border ? focusRingBorderStyle({\n    color: color.default.disabled.border,\n    width: input.border.width\n  }) : \"none\", color.default.hovered.bg, color.default.hovered.fg, $border ? focusRingBorderStyle({\n    color: color.default.hovered.border,\n    width: input.border.width\n  }) : \"none\", color.default.readOnly.bg, color.default.readOnly.fg);\n}\n\nexport { textInputBaseStyle, textInputFontSizeStyle, textInputRepresentationStyle, textInputRootStyle };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/styles/input/textInputStyle.js"],"names":["css","focusRingBorderStyle","focusRingStyle","getResponsiveProp","rem","responsive","ROOT_STYLE","textInputRootStyle","textInputBaseStyle","props","theme","$weight","font","sanity","fonts","text","color","input","default","enabled","fg","placeholder","family","weights","regular","disabled","invalid","readOnly","textInputFontSizeStyle","media","$fontSize","sizeIndex","size","sizes","fontSize","lineHeight","textInputRepresentationStyle","$border","$hasPrefix","$hasSuffix","focusRing","bg","border","width","hovered"],"mappings":"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","sourcesContent":["import { css } from \"styled-components\";\nimport { focusRingBorderStyle, focusRingStyle } from \"../focusRing\";\nimport { getResponsiveProp, rem, responsive } from \"../helpers\";\nconst ROOT_STYLE = css`\n  &:not([hidden]) {\n    display: flex;\n  }\n`;\nfunction textInputRootStyle() {\n  return ROOT_STYLE;\n}\nfunction textInputBaseStyle(props) {\n  const { theme, $weight } = props;\n  const font = theme.sanity.fonts.text;\n  const color = theme.sanity.color.input;\n  return css`\n    --input-fg-color: ${color.default.enabled.fg};\n    --input-placeholder-color: ${color.default.enabled.placeholder};\n\n    appearance: none;\n    background: none;\n    border: 0;\n    border-radius: 0;\n    outline: none;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: ${font.family};\n    font-weight: ${$weight && font.weights[$weight] || font.weights.regular};\n    margin: 0;\n    position: relative;\n    z-index: 1;\n    display: block;\n    color: var(--input-fg-color);\n\n    /* NOTE: This is a hack to disable Chrome’s autofill styles */\n    &:-webkit-autofill,\n    &:-webkit-autofill:hover,\n    &:-webkit-autofill:focus,\n    &:-webkit-autofill:active {\n      -webkit-text-fill-color: var(--input-fg-color) !important;\n      transition: background-color 5000s;\n      transition-delay: 86400s /* 24h */;\n    }\n\n    &::placeholder {\n      color: var(--input-placeholder-color);\n    }\n\n    /* &:is(textarea) */\n    &[data-as='textarea'] {\n      resize: none;\n    }\n\n    /* enabled */\n    &:not(:invalid):not(:disabled):not(:read-only) {\n      --input-fg-color: ${color.default.enabled.fg};\n      --input-placeholder-color: ${color.default.enabled.placeholder};\n    }\n\n    /* disabled */\n    &:not(:invalid):disabled {\n      --input-fg-color: ${color.default.disabled.fg};\n      --input-placeholder-color: ${color.default.disabled.placeholder};\n    }\n\n    /* invalid */\n    &:invalid {\n      --input-fg-color: ${color.invalid.enabled.fg};\n      --input-placeholder-color: ${color.invalid.enabled.placeholder};\n    }\n\n    /* readOnly */\n    &:read-only {\n      --input-fg-color: ${color.default.readOnly.fg};\n      --input-placeholder-color: ${color.default.readOnly.placeholder};\n    }\n  `;\n}\nfunction textInputFontSizeStyle(props) {\n  const { theme } = props;\n  const { fonts, media } = theme.sanity;\n  return responsive(media, getResponsiveProp(props.$fontSize, [2]), (sizeIndex) => {\n    const size = fonts.text.sizes[sizeIndex] || fonts.text.sizes[2];\n    return {\n      fontSize: rem(size.fontSize),\n      lineHeight: size.lineHeight / size.fontSize\n    };\n  });\n}\nfunction textInputRepresentationStyle(props) {\n  const { $border, $hasPrefix, $hasSuffix, theme } = props;\n  const { focusRing, input } = theme.sanity;\n  const color = theme.sanity.color.input;\n  return css`\n    --card-bg-color: ${color.default.enabled.bg};\n    --card-fg-color: ${color.default.enabled.fg};\n    --input-box-shadow: none;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    pointer-events: none;\n    z-index: 0;\n    background-color: var(--card-bg-color);\n    box-shadow: var(--input-box-shadow);\n\n    border-top-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-bottom-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-top-right-radius: ${$hasSuffix ? 0 : void 0};\n    border-bottom-right-radius: ${$hasSuffix ? 0 : void 0};\n\n    /* enabled */\n    *:not(:disabled) + && {\n      --input-box-shadow: ${$border ? focusRingBorderStyle({ color: color.default.enabled.border, width: input.border.width }) : void 0};\n    }\n\n    /* invalid */\n    *:not(:disabled):invalid + && {\n      --card-bg-color: ${color.invalid.enabled.bg};\n      --card-fg-color: ${color.invalid.enabled.fg};\n      --input-box-shadow: ${$border ? focusRingBorderStyle({ color: color.invalid.enabled.border, width: input.border.width }) : \"none\"};\n    }\n\n    /* focused */\n    *:not(:disabled):focus + && {\n      --input-box-shadow: ${focusRingStyle({\n    border: $border ? { color: color.default.enabled.border, width: input.border.width } : void 0,\n    focusRing\n  })};\n    }\n\n    /* disabled */\n    *:disabled + && {\n      --card-bg-color: ${color.default.disabled.bg};\n      --card-fg-color: ${color.default.disabled.fg};\n      --input-box-shadow: ${$border ? focusRingBorderStyle({\n    color: color.default.disabled.border,\n    width: input.border.width\n  }) : \"none\"};\n    }\n\n    /* hovered */\n    @media (hover: hover) {\n      *:not(:disabled):not(:read-only):not(:invalid):hover + && {\n        --card-bg-color: ${color.default.hovered.bg};\n        --card-fg-color: ${color.default.hovered.fg};\n      }\n\n      *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + && {\n        --input-box-shadow: ${$border ? focusRingBorderStyle({\n    color: color.default.hovered.border,\n    width: input.border.width\n  }) : \"none\"};\n      }\n    }\n\n    /* readOnly */\n    *:read-only + && {\n      --card-bg-color: ${color.default.readOnly.bg};\n      --card-fg-color: ${color.default.readOnly.fg};\n    }\n  `;\n}\nexport {\n  textInputBaseStyle,\n  textInputFontSizeStyle,\n  textInputRepresentationStyle,\n  textInputRootStyle\n};\n"]},"metadata":{},"sourceType":"module"}