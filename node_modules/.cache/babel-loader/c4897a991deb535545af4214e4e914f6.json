{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2;\n\nimport { css } from \"styled-components\";\nimport { rem } from \"../../styles\";\nimport { focusRingBorderStyle, focusRingStyle } from \"../../styles/internal\";\n\nfunction checkboxBaseStyles() {\n  return css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    position: relative;\\n    display: inline-block;\\n  \"])));\n}\n\nfunction inputElementStyles(props) {\n  var theme = props.theme;\n  var color = theme.sanity.color.input;\n  var _theme$sanity = theme.sanity,\n      focusRing = _theme$sanity.focusRing,\n      input = _theme$sanity.input,\n      radius = _theme$sanity.radius;\n  return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    outline: none;\\n    opacity: 0;\\n    z-index: 1;\\n    padding: 0;\\n    margin: 0;\\n\\n    & + span {\\n      position: relative;\\n      display: block;\\n      height: \", \";\\n      width: \", \";\\n      box-sizing: border-box;\\n      box-shadow: \", \";\\n      border-radius: \", \";\\n      line-height: 1;\\n      background-color: \", \";\\n\\n      & > svg {\\n        display: block;\\n        position: absolute;\\n        opacity: 0;\\n        height: 100%;\\n        width: 100%;\\n\\n        & > path {\\n          vector-effect: non-scaling-stroke;\\n          stroke-width: 2 !important;\\n        }\\n      }\\n    }\\n\\n    &:not(:disabled):focus + span {\\n      box-shadow: \", \";\\n    }\\n\\n    &:not(:disabled):focus:not(:focus-visible) + span {\\n      box-shadow: \", \";\\n    }\\n\\n    &:checked + span > svg:first-child {\\n      opacity: 1;\\n    }\\n\\n    &[data-read-only] + span {\\n      background-color: \", \";\\n      box-shadow: \", \";\\n      color: \", \";\\n    }\\n\\n    &:not([data-read-only]):disabled + span {\\n      background-color: \", \";\\n      box-shadow: \", \";\\n      color: \", \";\\n    }\\n\\n    &:indeterminate + span > svg:last-child {\\n      opacity: 1;\\n    }\\n  \"])), rem(input.checkbox.size), rem(input.checkbox.size), focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  }), rem(radius[2]), color.default.enabled.bg, focusRingStyle({\n    border: {\n      width: input.border.width,\n      color: color.default.enabled.border\n    },\n    focusRing: focusRing\n  }), focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  }), color.default.readOnly.bg, focusRingBorderStyle({\n    width: input.border.width,\n    color: color.default.readOnly.border\n  }), color.default.readOnly.fg, color.default.disabled.bg, focusRingBorderStyle({\n    width: input.border.width,\n    color: color.default.disabled.border\n  }), color.default.disabled.fg);\n}\n\nexport { checkboxBaseStyles, inputElementStyles };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/primitives/checkbox/styles.js"],"names":["css","rem","focusRingBorderStyle","focusRingStyle","checkboxBaseStyles","inputElementStyles","props","theme","color","sanity","input","focusRing","radius","checkbox","size","default","enabled","border","width","bg","readOnly","fg","disabled"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,oBAAT,EAA+BC,cAA/B,QAAqD,uBAArD;;AACA,SAASC,kBAAT,GAA8B;AAC5B,SAAOJ,GAAP;AAID;;AACD,SAASK,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAQC,KAAR,GAAkBD,KAAlB,CAAQC,KAAR;AACA,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAmBE,KAAjC;AACA,sBAAqCH,KAAK,CAACE,MAA3C;AAAA,MAAQE,SAAR,iBAAQA,SAAR;AAAA,MAAmBD,KAAnB,iBAAmBA,KAAnB;AAAA,MAA0BE,MAA1B,iBAA0BA,MAA1B;AACA,SAAOZ,GAAP,gzCAecC,GAAG,CAACS,KAAK,CAACG,QAAN,CAAeC,IAAhB,CAfjB,EAgBab,GAAG,CAACS,KAAK,CAACG,QAAN,CAAeC,IAAhB,CAhBhB,EAkBkBZ,oBAAoB,CAAC;AACrCM,IAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBC,MADQ;AAErCC,IAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC;AAFiB,GAAD,CAlBtC,EAsBqBjB,GAAG,CAACW,MAAM,CAAC,CAAD,CAAP,CAtBxB,EAwBwBJ,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBG,EAxB9C,EAyCkBhB,cAAc,CAAC;AAC/Bc,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC,KAAtB;AAA6BV,MAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBC;AAA1D,KADuB;AAE/BN,IAAAA,SAAS,EAATA;AAF+B,GAAD,CAzChC,EAgDkBT,oBAAoB,CAAC;AACrCM,IAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBC,MADQ;AAErCC,IAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC;AAFiB,GAAD,CAhDtC,EA2DwBV,KAAK,CAACO,OAAN,CAAcK,QAAd,CAAuBD,EA3D/C,EA4DkBjB,oBAAoB,CAAC;AACrCgB,IAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC,KADiB;AAErCV,IAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcK,QAAd,CAAuBH;AAFO,GAAD,CA5DtC,EAgEaT,KAAK,CAACO,OAAN,CAAcK,QAAd,CAAuBC,EAhEpC,EAoEwBb,KAAK,CAACO,OAAN,CAAcO,QAAd,CAAuBH,EApE/C,EAqEkBjB,oBAAoB,CAAC;AACrCgB,IAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC,KADiB;AAErCV,IAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcO,QAAd,CAAuBL;AAFO,GAAD,CArEtC,EAyEaT,KAAK,CAACO,OAAN,CAAcO,QAAd,CAAuBD,EAzEpC;AAgFD;;AACD,SACEjB,kBADF,EAEEC,kBAFF","sourcesContent":["import { css } from \"styled-components\";\nimport { rem } from \"../../styles\";\nimport { focusRingBorderStyle, focusRingStyle } from \"../../styles/internal\";\nfunction checkboxBaseStyles() {\n  return css`\n    position: relative;\n    display: inline-block;\n  `;\n}\nfunction inputElementStyles(props) {\n  const { theme } = props;\n  const color = theme.sanity.color.input;\n  const { focusRing, input, radius } = theme.sanity;\n  return css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n\n    & + span {\n      position: relative;\n      display: block;\n      height: ${rem(input.checkbox.size)};\n      width: ${rem(input.checkbox.size)};\n      box-sizing: border-box;\n      box-shadow: ${focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  })};\n      border-radius: ${rem(radius[2])};\n      line-height: 1;\n      background-color: ${color.default.enabled.bg};\n\n      & > svg {\n        display: block;\n        position: absolute;\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n\n        & > path {\n          vector-effect: non-scaling-stroke;\n          stroke-width: 2 !important;\n        }\n      }\n    }\n\n    &:not(:disabled):focus + span {\n      box-shadow: ${focusRingStyle({\n    border: { width: input.border.width, color: color.default.enabled.border },\n    focusRing\n  })};\n    }\n\n    &:not(:disabled):focus:not(:focus-visible) + span {\n      box-shadow: ${focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  })};\n    }\n\n    &:checked + span > svg:first-child {\n      opacity: 1;\n    }\n\n    &[data-read-only] + span {\n      background-color: ${color.default.readOnly.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.default.readOnly.border\n  })};\n      color: ${color.default.readOnly.fg};\n    }\n\n    &:not([data-read-only]):disabled + span {\n      background-color: ${color.default.disabled.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.default.disabled.border\n  })};\n      color: ${color.default.disabled.fg};\n    }\n\n    &:indeterminate + span > svg:last-child {\n      opacity: 1;\n    }\n  `;\n}\nexport {\n  checkboxBaseStyles,\n  inputElementStyles\n};\n"]},"metadata":{},"sourceType":"module"}