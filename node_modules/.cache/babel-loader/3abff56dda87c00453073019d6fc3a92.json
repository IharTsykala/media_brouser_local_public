{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nvar MEDIA_MANAGER_CACHE = new WeakMap();\n\nfunction _getMediaQuery(media, index) {\n  if (index === 0) {\n    return \"screen and (max-width: \".concat(media[index] - 1, \"px)\");\n  }\n\n  if (index === media.length) {\n    return \"screen and (min-width: \".concat(media[index - 1], \"px)\");\n  }\n\n  return \"screen and (min-width: \".concat(media[index - 1], \"px) and (max-width: \").concat(media[index] - 1, \"px)\");\n}\n\nfunction _createMediaManager(media) {\n  var mediaLen = media.length;\n  var sizes = [];\n\n  if (typeof window !== \"undefined\") {\n    for (var index = mediaLen; index > -1; index -= 1) {\n      var mediaQuery = _getMediaQuery(media, index);\n\n      sizes.push({\n        index: index,\n        mq: window.matchMedia(mediaQuery)\n      });\n    }\n  }\n\n  var getCurrentIndex = function getCurrentIndex() {\n    var _iterator = _createForOfIteratorHelper(sizes),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _step.value,\n            _index = _step$value.index,\n            mq = _step$value.mq;\n        if (mq.matches) return _index;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return 0;\n  };\n\n  var subscribe = function subscribe(subscriber) {\n    var disposeFns = [];\n\n    var _iterator2 = _createForOfIteratorHelper(sizes),\n        _step2;\n\n    try {\n      var _loop = function _loop() {\n        var _step2$value = _step2.value,\n            index = _step2$value.index,\n            mq = _step2$value.mq;\n\n        var handleChange = function handleChange() {\n          if (mq.matches) subscriber(index);\n        };\n\n        if (mq.addEventListener) {\n          mq.addEventListener(\"change\", handleChange);\n        } else {\n          mq.addListener(handleChange);\n        }\n\n        disposeFns.push(function () {\n          if (mq.removeEventListener) {\n            mq.removeEventListener(\"change\", handleChange);\n          } else {\n            mq.removeListener(handleChange);\n          }\n        });\n      };\n\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return function () {\n      var _iterator3 = _createForOfIteratorHelper(disposeFns),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var disposeFn = _step3.value;\n          disposeFn();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    };\n  };\n\n  return {\n    getCurrentIndex: getCurrentIndex,\n    subscribe: subscribe\n  };\n}\n\nfunction _getMediaManager(media) {\n  var manager = MEDIA_MANAGER_CACHE.get(media);\n\n  if (!manager) {\n    manager = _createMediaManager(media);\n    MEDIA_MANAGER_CACHE.set(media, manager);\n  }\n\n  return manager;\n}\n\nexport { _getMediaManager };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/hooks/useMediaIndex/lib/media.js"],"names":["MEDIA_MANAGER_CACHE","WeakMap","_getMediaQuery","media","index","length","_createMediaManager","mediaLen","sizes","window","mediaQuery","push","mq","matchMedia","getCurrentIndex","matches","subscribe","subscriber","disposeFns","handleChange","addEventListener","addListener","removeEventListener","removeListener","disposeFn","_getMediaManager","manager","get","set"],"mappings":"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","sourcesContent":["const MEDIA_MANAGER_CACHE = new WeakMap();\nfunction _getMediaQuery(media, index) {\n  if (index === 0) {\n    return `screen and (max-width: ${media[index] - 1}px)`;\n  }\n  if (index === media.length) {\n    return `screen and (min-width: ${media[index - 1]}px)`;\n  }\n  return `screen and (min-width: ${media[index - 1]}px) and (max-width: ${media[index] - 1}px)`;\n}\nfunction _createMediaManager(media) {\n  const mediaLen = media.length;\n  const sizes = [];\n  if (typeof window !== \"undefined\") {\n    for (let index = mediaLen; index > -1; index -= 1) {\n      const mediaQuery = _getMediaQuery(media, index);\n      sizes.push({ index, mq: window.matchMedia(mediaQuery) });\n    }\n  }\n  const getCurrentIndex = () => {\n    for (const { index, mq } of sizes) {\n      if (mq.matches)\n        return index;\n    }\n    return 0;\n  };\n  const subscribe = (subscriber) => {\n    const disposeFns = [];\n    for (const { index, mq } of sizes) {\n      const handleChange = () => {\n        if (mq.matches)\n          subscriber(index);\n      };\n      if (mq.addEventListener) {\n        mq.addEventListener(\"change\", handleChange);\n      } else {\n        mq.addListener(handleChange);\n      }\n      disposeFns.push(() => {\n        if (mq.removeEventListener) {\n          mq.removeEventListener(\"change\", handleChange);\n        } else {\n          mq.removeListener(handleChange);\n        }\n      });\n    }\n    return () => {\n      for (const disposeFn of disposeFns) {\n        disposeFn();\n      }\n    };\n  };\n  return { getCurrentIndex, subscribe };\n}\nfunction _getMediaManager(media) {\n  let manager = MEDIA_MANAGER_CACHE.get(media);\n  if (!manager) {\n    manager = _createMediaManager(media);\n    MEDIA_MANAGER_CACHE.set(media, manager);\n  }\n  return manager;\n}\nexport {\n  _getMediaManager\n};\n"]},"metadata":{},"sourceType":"module"}