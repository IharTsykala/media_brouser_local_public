{"ast":null,"code":"import React, { forwardRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { EMPTY_RECORD } from \"../../constants\";\nimport { useResponsiveProp } from \"../../hooks\";\nimport { rem, responsive } from \"../../styles\";\nimport { Text } from \"../text\";\n\nfunction responsiveAvatarCounterSizeStyle(props) {\n  const {\n    theme\n  } = props;\n  const {\n    avatar,\n    media\n  } = theme.sanity;\n  return responsive(media, props.$size, size => {\n    const avatarSize = avatar.sizes[size];\n    if (!avatarSize) return EMPTY_RECORD;\n    return {\n      borderRadius: rem(avatarSize.size / 2),\n      minWidth: rem(avatarSize.size),\n      height: rem(avatarSize.size)\n    };\n  });\n}\n\nfunction avatarCounterBaseStyle(props) {\n  const {\n    theme\n  } = props;\n  return css`\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    user-select: none;\n    color: inherit;\n    color: var(--card-fg-color);\n    background: var(--card-bg-color);\n    box-shadow: 0 0 0 1px var(--card-bg-color), inset 0 0 0 1.5px var(--card-hairline-hard-color);\n    padding: 0 ${rem(theme.sanity.space[2])};\n\n    &:not([hidden]) {\n      display: flex;\n    }\n  `;\n}\n\nconst Root = styled.div(responsiveAvatarCounterSizeStyle, avatarCounterBaseStyle);\nconst AvatarCounter = forwardRef(function AvatarCounter2(props, ref) {\n  const {\n    count,\n    size: sizeProp = 0,\n    tone\n  } = props;\n  const size = useResponsiveProp(sizeProp, [0]);\n  return /* @__PURE__ */React.createElement(Root, {\n    $size: size,\n    \"data-tone\": tone,\n    ref\n  }, /* @__PURE__ */React.createElement(Text, {\n    as: \"span\",\n    size: size.map(s => s === 0 ? 0 : s + 1)\n  }, /* @__PURE__ */React.createElement(\"strong\", null, count)));\n});\nexport { AvatarCounter };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/primitives/avatar/avatarCounter.js"],"names":["React","forwardRef","styled","css","EMPTY_RECORD","useResponsiveProp","rem","responsive","Text","responsiveAvatarCounterSizeStyle","props","theme","avatar","media","sanity","$size","size","avatarSize","sizes","borderRadius","minWidth","height","avatarCounterBaseStyle","space","Root","div","AvatarCounter","AvatarCounter2","ref","count","sizeProp","tone","createElement","as","map","s"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,cAAhC;AACA,SAASC,IAAT,QAAqB,SAArB;;AACA,SAASC,gCAAT,CAA0CC,KAA1C,EAAiD;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,QAAM;AAAEE,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBF,KAAK,CAACG,MAAhC;AACA,SAAOP,UAAU,CAACM,KAAD,EAAQH,KAAK,CAACK,KAAd,EAAsBC,IAAD,IAAU;AAC9C,UAAMC,UAAU,GAAGL,MAAM,CAACM,KAAP,CAAaF,IAAb,CAAnB;AACA,QAAI,CAACC,UAAL,EACE,OAAOb,YAAP;AACF,WAAO;AACLe,MAAAA,YAAY,EAAEb,GAAG,CAACW,UAAU,CAACD,IAAX,GAAkB,CAAnB,CADZ;AAELI,MAAAA,QAAQ,EAAEd,GAAG,CAACW,UAAU,CAACD,IAAZ,CAFR;AAGLK,MAAAA,MAAM,EAAEf,GAAG,CAACW,UAAU,CAACD,IAAZ;AAHN,KAAP;AAKD,GATgB,CAAjB;AAUD;;AACD,SAASM,sBAAT,CAAgCZ,KAAhC,EAAuC;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,SAAOP,GAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBG,GAAG,CAACK,KAAK,CAACG,MAAN,CAAaS,KAAb,CAAmB,CAAnB,CAAD,CAAwB;AAC5C;AACA;AACA;AACA;AACA,GAdE;AAeD;;AACD,MAAMC,IAAI,GAAGtB,MAAM,CAACuB,GAAP,CAAWhB,gCAAX,EAA6Ca,sBAA7C,CAAb;AACA,MAAMI,aAAa,GAAGzB,UAAU,CAAC,SAAS0B,cAAT,CAAwBjB,KAAxB,EAA+BkB,GAA/B,EAAoC;AACnE,QAAM;AAAEC,IAAAA,KAAF;AAASb,IAAAA,IAAI,EAAEc,QAAQ,GAAG,CAA1B;AAA6BC,IAAAA;AAA7B,MAAsCrB,KAA5C;AACA,QAAMM,IAAI,GAAGX,iBAAiB,CAACyB,QAAD,EAAW,CAAC,CAAD,CAAX,CAA9B;AACA,SAAO,eAAgB9B,KAAK,CAACgC,aAAN,CAAoBR,IAApB,EAA0B;AAC/CT,IAAAA,KAAK,EAAEC,IADwC;AAE/C,iBAAae,IAFkC;AAG/CH,IAAAA;AAH+C,GAA1B,EAIpB,eAAgB5B,KAAK,CAACgC,aAAN,CAAoBxB,IAApB,EAA0B;AAC3CyB,IAAAA,EAAE,EAAE,MADuC;AAE3CjB,IAAAA,IAAI,EAAEA,IAAI,CAACkB,GAAL,CAAUC,CAAD,IAAOA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAC,GAAG,CAAlC;AAFqC,GAA1B,EAGhB,eAAgBnC,KAAK,CAACgC,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoCH,KAApC,CAHA,CAJI,CAAvB;AAQD,CAX+B,CAAhC;AAYA,SACEH,aADF","sourcesContent":["import React, { forwardRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { EMPTY_RECORD } from \"../../constants\";\nimport { useResponsiveProp } from \"../../hooks\";\nimport { rem, responsive } from \"../../styles\";\nimport { Text } from \"../text\";\nfunction responsiveAvatarCounterSizeStyle(props) {\n  const { theme } = props;\n  const { avatar, media } = theme.sanity;\n  return responsive(media, props.$size, (size) => {\n    const avatarSize = avatar.sizes[size];\n    if (!avatarSize)\n      return EMPTY_RECORD;\n    return {\n      borderRadius: rem(avatarSize.size / 2),\n      minWidth: rem(avatarSize.size),\n      height: rem(avatarSize.size)\n    };\n  });\n}\nfunction avatarCounterBaseStyle(props) {\n  const { theme } = props;\n  return css`\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    user-select: none;\n    color: inherit;\n    color: var(--card-fg-color);\n    background: var(--card-bg-color);\n    box-shadow: 0 0 0 1px var(--card-bg-color), inset 0 0 0 1.5px var(--card-hairline-hard-color);\n    padding: 0 ${rem(theme.sanity.space[2])};\n\n    &:not([hidden]) {\n      display: flex;\n    }\n  `;\n}\nconst Root = styled.div(responsiveAvatarCounterSizeStyle, avatarCounterBaseStyle);\nconst AvatarCounter = forwardRef(function AvatarCounter2(props, ref) {\n  const { count, size: sizeProp = 0, tone } = props;\n  const size = useResponsiveProp(sizeProp, [0]);\n  return /* @__PURE__ */ React.createElement(Root, {\n    $size: size,\n    \"data-tone\": tone,\n    ref\n  }, /* @__PURE__ */ React.createElement(Text, {\n    as: \"span\",\n    size: size.map((s) => s === 0 ? 0 : s + 1)\n  }, /* @__PURE__ */ React.createElement(\"strong\", null, count)));\n});\nexport {\n  AvatarCounter\n};\n"]},"metadata":{},"sourceType":"module"}