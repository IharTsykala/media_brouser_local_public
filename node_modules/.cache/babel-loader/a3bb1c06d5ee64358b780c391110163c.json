{"ast":null,"code":"import { isHTMLAnchorElement, isHTMLButtonElement } from \"../../helpers\";\n\nfunction _isFocusable(element) {\n  return isHTMLAnchorElement(element) && element.getAttribute(\"data-disabled\") !== \"true\" || isHTMLButtonElement(element) && !element.disabled;\n}\n\nfunction _getFocusableElements(elements) {\n  return elements.filter(_isFocusable);\n}\n\nfunction _getDOMPath(rootElement, el) {\n  const path = [];\n  let e = el;\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement;\n    if (!parentElement) return path;\n    const children = Array.from(parentElement.childNodes);\n    const index = children.indexOf(e);\n    path.unshift(index);\n\n    if (parentElement === rootElement) {\n      return path;\n    }\n\n    e = parentElement;\n  }\n\n  return path;\n}\n\nconst EMPTY_PATH = [];\n\nfunction _sortElements(rootElement, elements) {\n  if (!rootElement) return;\n  const map = new WeakMap();\n\n  for (const el of elements) {\n    map.set(el, _getDOMPath(rootElement, el));\n  }\n\n  const _sort = (a, b) => {\n    const _a = map.get(a) || EMPTY_PATH;\n\n    const _b = map.get(b) || EMPTY_PATH;\n\n    const len = Math.max(_a.length, _b.length);\n\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1;\n      const bIndex = _b[i] || -1;\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex;\n      }\n    }\n\n    return 0;\n  };\n\n  elements.sort(_sort);\n}\n\nexport { _getDOMPath, _getFocusableElements, _sortElements };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/components/menu/helpers.js"],"names":["isHTMLAnchorElement","isHTMLButtonElement","_isFocusable","element","getAttribute","disabled","_getFocusableElements","elements","filter","_getDOMPath","rootElement","el","path","e","parentElement","children","Array","from","childNodes","index","indexOf","unshift","EMPTY_PATH","_sortElements","map","WeakMap","set","_sort","a","b","_a","get","_b","len","Math","max","length","i","aIndex","bIndex","sort"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,mBAA9B,QAAyD,eAAzD;;AACA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAOH,mBAAmB,CAACG,OAAD,CAAnB,IAAgCA,OAAO,CAACC,YAAR,CAAqB,eAArB,MAA0C,MAA1E,IAAoFH,mBAAmB,CAACE,OAAD,CAAnB,IAAgC,CAACA,OAAO,CAACE,QAApI;AACD;;AACD,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AACvC,SAAOA,QAAQ,CAACC,MAAT,CAAgBN,YAAhB,CAAP;AACD;;AACD,SAASO,WAAT,CAAqBC,WAArB,EAAkCC,EAAlC,EAAsC;AACpC,QAAMC,IAAI,GAAG,EAAb;AACA,MAAIC,CAAC,GAAGF,EAAR;;AACA,SAAOE,CAAC,KAAKH,WAAb,EAA0B;AACxB,UAAMI,aAAa,GAAGD,CAAC,CAACC,aAAxB;AACA,QAAI,CAACA,aAAL,EACE,OAAOF,IAAP;AACF,UAAMG,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWH,aAAa,CAACI,UAAzB,CAAjB;AACA,UAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAT,CAAiBP,CAAjB,CAAd;AACAD,IAAAA,IAAI,CAACS,OAAL,CAAaF,KAAb;;AACA,QAAIL,aAAa,KAAKJ,WAAtB,EAAmC;AACjC,aAAOE,IAAP;AACD;;AACDC,IAAAA,CAAC,GAAGC,aAAJ;AACD;;AACD,SAAOF,IAAP;AACD;;AACD,MAAMU,UAAU,GAAG,EAAnB;;AACA,SAASC,aAAT,CAAuBb,WAAvB,EAAoCH,QAApC,EAA8C;AAC5C,MAAI,CAACG,WAAL,EACE;AACF,QAAMc,GAAG,GAAG,IAAIC,OAAJ,EAAZ;;AACA,OAAK,MAAMd,EAAX,IAAiBJ,QAAjB,EAA2B;AACzBiB,IAAAA,GAAG,CAACE,GAAJ,CAAQf,EAAR,EAAYF,WAAW,CAACC,WAAD,EAAcC,EAAd,CAAvB;AACD;;AACD,QAAMgB,KAAK,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtB,UAAMC,EAAE,GAAGN,GAAG,CAACO,GAAJ,CAAQH,CAAR,KAAcN,UAAzB;;AACA,UAAMU,EAAE,GAAGR,GAAG,CAACO,GAAJ,CAAQF,CAAR,KAAcP,UAAzB;;AACA,UAAMW,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASL,EAAE,CAACM,MAAZ,EAAoBJ,EAAE,CAACI,MAAvB,CAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyBI,CAAC,IAAI,CAA9B,EAAiC;AAC/B,YAAMC,MAAM,GAAGR,EAAE,CAACO,CAAD,CAAF,IAAS,CAAC,CAAzB;AACA,YAAME,MAAM,GAAGP,EAAE,CAACK,CAAD,CAAF,IAAS,CAAC,CAAzB;;AACA,UAAIC,MAAM,KAAKC,MAAf,EAAuB;AACrB,eAAOD,MAAM,GAAGC,MAAhB;AACD;AACF;;AACD,WAAO,CAAP;AACD,GAZD;;AAaAhC,EAAAA,QAAQ,CAACiC,IAAT,CAAcb,KAAd;AACD;;AACD,SACElB,WADF,EAEEH,qBAFF,EAGEiB,aAHF","sourcesContent":["import { isHTMLAnchorElement, isHTMLButtonElement } from \"../../helpers\";\nfunction _isFocusable(element) {\n  return isHTMLAnchorElement(element) && element.getAttribute(\"data-disabled\") !== \"true\" || isHTMLButtonElement(element) && !element.disabled;\n}\nfunction _getFocusableElements(elements) {\n  return elements.filter(_isFocusable);\n}\nfunction _getDOMPath(rootElement, el) {\n  const path = [];\n  let e = el;\n  while (e !== rootElement) {\n    const parentElement = e.parentElement;\n    if (!parentElement)\n      return path;\n    const children = Array.from(parentElement.childNodes);\n    const index = children.indexOf(e);\n    path.unshift(index);\n    if (parentElement === rootElement) {\n      return path;\n    }\n    e = parentElement;\n  }\n  return path;\n}\nconst EMPTY_PATH = [];\nfunction _sortElements(rootElement, elements) {\n  if (!rootElement)\n    return;\n  const map = new WeakMap();\n  for (const el of elements) {\n    map.set(el, _getDOMPath(rootElement, el));\n  }\n  const _sort = (a, b) => {\n    const _a = map.get(a) || EMPTY_PATH;\n    const _b = map.get(b) || EMPTY_PATH;\n    const len = Math.max(_a.length, _b.length);\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1;\n      const bIndex = _b[i] || -1;\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex;\n      }\n    }\n    return 0;\n  };\n  elements.sort(_sort);\n}\nexport {\n  _getDOMPath,\n  _getFocusableElements,\n  _sortElements\n};\n"]},"metadata":{},"sourceType":"module"}