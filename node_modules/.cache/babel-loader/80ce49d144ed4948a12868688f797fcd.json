{"ast":null,"code":"import { rem, responsive } from \"../../styles\";\nimport { focusRingStyle } from \"../../styles/internal\";\nvar avatarStyle = {\n  root: avatarRootStyle,\n  arrow: avatarArrowStyle,\n  bgStroke: avatarBgStrokeStyle,\n  stroke: avatarStrokeStyle,\n  initials: avatarInitialsStyle\n};\n\nfunction avatarArrowStyle() {\n  return {\n    position: \"absolute\",\n    boxSizing: \"border-box\",\n    zIndex: 0,\n    opacity: 0,\n    transition: \"all 0.2s linear\",\n    transform: \"rotate(-90deg) translate3d(0, 6px, 0)\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    \"& > svg\": {\n      width: \"11px\",\n      height: \"7px\",\n      position: \"absolute\",\n      top: \"-5px\",\n      left: \"50%\",\n      transform: \"translateX(-6px)\",\n      \"&:not([hidden])\": {\n        display: \"block\"\n      }\n    },\n    \"[data-arrow-position='inside'] > &\": {\n      transform: \"rotate(-90deg) translate3d(0, 6px, 0)\",\n      opacity: 0\n    },\n    \"[data-arrow-position='top'] > &\": {\n      opacity: 1,\n      transform: \"rotate(0deg)\"\n    },\n    \"[data-arrow-position='bottom'] > &\": {\n      opacity: 1,\n      transform: \"rotate(-180deg)\"\n    }\n  };\n}\n\nfunction avatarRootStyle(props) {\n  var $color = props.$color,\n      theme = props.theme;\n  var focusRing = theme.sanity.focusRing;\n  return {\n    backgroundColor: $color,\n    position: \"relative\",\n    boxSizing: \"border-box\",\n    userSelect: \"none\",\n    boxShadow: \"0 0 0 1px var(--card-bg-color)\",\n    '&[data-status=\"inactive\"]': {\n      opacity: 0.5\n    },\n    \"&>svg\": {\n      \"&:not([hidden])\": {\n        display: \"block\"\n      }\n    },\n    '&[data-as=\"button\"]': {\n      \"-webkit-font-smoothing\": \"inherit\",\n      appearance: \"none\",\n      margin: 0,\n      padding: 0,\n      border: 0,\n      font: \"inherit\",\n      color: \"inherit\",\n      outline: \"none\",\n      \"&:focus\": {\n        boxShadow: focusRingStyle({\n          focusRing: focusRing\n        })\n      },\n      \"&:focus:not(:focus-visible)\": {\n        boxShadow: \"none\"\n      }\n    }\n  };\n}\n\nfunction responsiveAvatarSizeStyle(props) {\n  var theme = props.theme;\n  var _theme$sanity = theme.sanity,\n      avatar = _theme$sanity.avatar,\n      media = _theme$sanity.media;\n  return responsive(media, props.$size, function (size) {\n    var avatarSize = avatar.sizes[size] || avatar.sizes[0];\n    return {\n      width: rem(avatarSize.size),\n      height: rem(avatarSize.size),\n      borderRadius: rem(avatarSize.size / 2),\n      \"&>svg\": {\n        width: rem(avatarSize.size),\n        height: rem(avatarSize.size),\n        borderRadius: rem(avatarSize.size / 2)\n      }\n    };\n  });\n}\n\nfunction avatarInitialsStyle(props) {\n  var theme = props.theme;\n  var base = theme.sanity.color.base;\n  return {\n    width: \"100%\",\n    height: \"100%\",\n    color: base.fg,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n    textAlign: \"center\",\n    borderRadius: \"50%\",\n    \"&:not([hidden])\": {\n      display: \"flex\"\n    }\n  };\n}\n\nfunction avatarBgStrokeStyle() {\n  return {\n    strokeWidth: \"4px\",\n    stroke: \"var(--card-bg-color)\"\n  };\n}\n\nfunction avatarStrokeStyle() {\n  return {\n    strokeWidth: \"3px\",\n    '[data-status=\"editing\"] &': {\n      strokeSasharray: \"2 4\",\n      strokeLinecap: \"round\"\n    }\n  };\n}\n\nexport { avatarInitialsStyle, avatarRootStyle, avatarStyle, responsiveAvatarSizeStyle };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/primitives/avatar/styles.js"],"names":["rem","responsive","focusRingStyle","avatarStyle","root","avatarRootStyle","arrow","avatarArrowStyle","bgStroke","avatarBgStrokeStyle","stroke","avatarStrokeStyle","initials","avatarInitialsStyle","position","boxSizing","zIndex","opacity","transition","transform","left","right","top","bottom","width","height","display","props","$color","theme","focusRing","sanity","backgroundColor","userSelect","boxShadow","appearance","margin","padding","border","font","color","outline","responsiveAvatarSizeStyle","avatar","media","$size","size","avatarSize","sizes","borderRadius","base","fg","alignItems","justifyContent","textTransform","textAlign","strokeWidth","strokeSasharray","strokeLinecap"],"mappings":"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","sourcesContent":["import { rem, responsive } from \"../../styles\";\nimport { focusRingStyle } from \"../../styles/internal\";\nconst avatarStyle = {\n  root: avatarRootStyle,\n  arrow: avatarArrowStyle,\n  bgStroke: avatarBgStrokeStyle,\n  stroke: avatarStrokeStyle,\n  initials: avatarInitialsStyle\n};\nfunction avatarArrowStyle() {\n  return {\n    position: \"absolute\",\n    boxSizing: \"border-box\",\n    zIndex: 0,\n    opacity: 0,\n    transition: \"all 0.2s linear\",\n    transform: \"rotate(-90deg) translate3d(0, 6px, 0)\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    \"& > svg\": {\n      width: \"11px\",\n      height: \"7px\",\n      position: \"absolute\",\n      top: \"-5px\",\n      left: \"50%\",\n      transform: \"translateX(-6px)\",\n      \"&:not([hidden])\": {\n        display: \"block\"\n      }\n    },\n    \"[data-arrow-position='inside'] > &\": {\n      transform: \"rotate(-90deg) translate3d(0, 6px, 0)\",\n      opacity: 0\n    },\n    \"[data-arrow-position='top'] > &\": {\n      opacity: 1,\n      transform: \"rotate(0deg)\"\n    },\n    \"[data-arrow-position='bottom'] > &\": {\n      opacity: 1,\n      transform: \"rotate(-180deg)\"\n    }\n  };\n}\nfunction avatarRootStyle(props) {\n  const { $color, theme } = props;\n  const { focusRing } = theme.sanity;\n  return {\n    backgroundColor: $color,\n    position: \"relative\",\n    boxSizing: \"border-box\",\n    userSelect: \"none\",\n    boxShadow: \"0 0 0 1px var(--card-bg-color)\",\n    '&[data-status=\"inactive\"]': {\n      opacity: 0.5\n    },\n    \"&>svg\": {\n      \"&:not([hidden])\": {\n        display: \"block\"\n      }\n    },\n    '&[data-as=\"button\"]': {\n      \"-webkit-font-smoothing\": \"inherit\",\n      appearance: \"none\",\n      margin: 0,\n      padding: 0,\n      border: 0,\n      font: \"inherit\",\n      color: \"inherit\",\n      outline: \"none\",\n      \"&:focus\": {\n        boxShadow: focusRingStyle({ focusRing })\n      },\n      \"&:focus:not(:focus-visible)\": {\n        boxShadow: \"none\"\n      }\n    }\n  };\n}\nfunction responsiveAvatarSizeStyle(props) {\n  const { theme } = props;\n  const { avatar, media } = theme.sanity;\n  return responsive(media, props.$size, (size) => {\n    const avatarSize = avatar.sizes[size] || avatar.sizes[0];\n    return {\n      width: rem(avatarSize.size),\n      height: rem(avatarSize.size),\n      borderRadius: rem(avatarSize.size / 2),\n      \"&>svg\": {\n        width: rem(avatarSize.size),\n        height: rem(avatarSize.size),\n        borderRadius: rem(avatarSize.size / 2)\n      }\n    };\n  });\n}\nfunction avatarInitialsStyle(props) {\n  const { theme } = props;\n  const { base } = theme.sanity.color;\n  return {\n    width: \"100%\",\n    height: \"100%\",\n    color: base.fg,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n    textAlign: \"center\",\n    borderRadius: \"50%\",\n    \"&:not([hidden])\": {\n      display: \"flex\"\n    }\n  };\n}\nfunction avatarBgStrokeStyle() {\n  return {\n    strokeWidth: \"4px\",\n    stroke: \"var(--card-bg-color)\"\n  };\n}\nfunction avatarStrokeStyle() {\n  return {\n    strokeWidth: \"3px\",\n    '[data-status=\"editing\"] &': {\n      strokeSasharray: \"2 4\",\n      strokeLinecap: \"round\"\n    }\n  };\n}\nexport {\n  avatarInitialsStyle,\n  avatarRootStyle,\n  avatarStyle,\n  responsiveAvatarSizeStyle\n};\n"]},"metadata":{},"sourceType":"module"}