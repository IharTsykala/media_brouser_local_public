{"ast":null,"code":"const axios = require(\"axios\");\n\nconst hostApp = process.env.REACT_APP_HOST || \"http://localhost:3000/\";\nconst hostVideo = process.env.REACT_VIDEO_HOST || \"https://api.vimeo.com\";\nconst currentRoute = \"video/list/\";\nconst userId = \"151396534\";\nconst accessToken = \"44c2627337c4ddb92f55eccd42e82229\";\nconst clientIdentifier = \"ad8e3f1947b97a05ec3e6c40ff2daee1c367901c\";\nconst stateWord = \"helloUser\";\nexport default class videoService {}\n\nvideoService.getRedirectToAllowPageService = async () => {\n  const newAccessToken = await axios.post(`${hostVideo}/oauth/authorize/client`, {\n    \"grant_type\": \"client_credentials\",\n    \"scope\": \"private purchased create edit delete interact upload promo_codes video_files scim public\"\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `bearer ${accessToken}`,\n      'Accept': 'application/vnd.vimeo.*+json;version=3.4'\n    }\n  });\n  window.location.href = `${hostApp}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=http://localhost:3000/&state=\"helloUser\"&scope=private`;\n};\n\nvideoService.getNewAccessTokenService = async (code, state) => {\n  if (state === stateWord) {\n    const response = await axios.post(`${hostVideo}/oauth/access_token`, {\n      grant_type: \"authorization_code\",\n      code: code,\n      redirect_uri: \"\"\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `bearer ${accessToken}`,\n        \"Accept\": \"application/vnd.vimeo.*+json;version=3.4\"\n      }\n    });\n    window.location.href = `${hostVideo}${currentRoute}`;\n  }\n};\n\nvideoService.getRedirectToVideoPageService = async (code, state) => {\n  window.location.href = `${hostVideo}${currentRoute}`;\n};\n\nvideoService.getArrayVideoService = async () => {\n  const response = await axios.get(`${hostVideo}/users/${userId}/videos`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `bearer ${accessToken}`,\n      Accept: \"application/vnd.vimeo.*+json;version=3.4\"\n    }\n  });\n  console.log(response);\n  return response.data;\n};\n\nvideoService.removeCardByIdService = async (id, newAccessToken) => {\n  const responseRemove = await axios.delete(`${hostVideo}${id}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `bearer ${newAccessToken}`,\n      Accept: \"application/vnd.vimeo.*+json;version=3.4\"\n    }\n  });\n  console.log(responseRemove); // return response.data\n};\n\nvideoService.editCardByIdService = async (id, newAccessToken) => {\n  const response = await axios.patch(`${hostVideo}${id}`, {}, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `bearer ${newAccessToken}`,\n      Accept: \"application/vnd.vimeo.*+json;version=3.4\"\n    }\n  });\n  console.log(response);\n  return response.data;\n};","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/src/services/api/videoService.ts"],"names":["axios","require","hostApp","process","env","REACT_APP_HOST","hostVideo","REACT_VIDEO_HOST","currentRoute","userId","accessToken","clientIdentifier","stateWord","videoService","getRedirectToAllowPageService","newAccessToken","post","headers","window","location","href","getNewAccessTokenService","code","state","response","grant_type","redirect_uri","getRedirectToVideoPageService","getArrayVideoService","get","Authorization","Accept","console","log","data","removeCardByIdService","id","responseRemove","delete","editCardByIdService","patch"],"mappings":"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","sourcesContent":["import { removeCardById } from \"../../Redux/store/video/video.actions\"\n\nconst axios = require(\"axios\")\nconst hostApp = process.env.REACT_APP_HOST || \"http://localhost:3000/\"\nconst hostVideo = process.env.REACT_VIDEO_HOST || \"https://api.vimeo.com\"\nconst currentRoute = \"video/list/\"\n\nconst userId = \"151396534\"\nconst accessToken = \"44c2627337c4ddb92f55eccd42e82229\"\nconst clientIdentifier = \"ad8e3f1947b97a05ec3e6c40ff2daee1c367901c\"\nconst stateWord = \"helloUser\"\n\nexport default class videoService {\n  static getRedirectToAllowPageService = async () => {\n\n    const newAccessToken = await axios.post(\n      `${hostVideo}/oauth/authorize/client`,\n      {\n        \"grant_type\": \"client_credentials\",\n        \"scope\": \"private purchased create edit delete interact upload promo_codes video_files scim public\"\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `bearer ${accessToken}`,\n          'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n        },\n      }\n    )\n\n    window.location.href = `${hostApp}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=http://localhost:3000/&state=\"helloUser\"&scope=private`;\n  }\n\n  static  getNewAccessTokenService = async (code: string, state: string) => {\n    if (state === stateWord) {\n      const response = await axios.post(\n        `${hostVideo}/oauth/access_token`,\n        {\n          grant_type: \"authorization_code\",\n          code: code,\n          redirect_uri: \"\",\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `bearer ${accessToken}`,\n            \"Accept\": \"application/vnd.vimeo.*+json;version=3.4\",\n          },\n        }\n      )\n      window.location.href = `${hostVideo}${currentRoute}`\n    }\n  }\n\n  static getRedirectToVideoPageService = async (code: string, state: string) => {\n    window.location.href = `${hostVideo}${currentRoute}`\n  }\n\n  // static getNewAccessTokenService = async (uriVideo: string) => {\n  // const newAccessToken = await axios.post(\n  //   `${host}/oauth/authorize/client`,\n  //   {\n  //     \"grant_type\": \"client_credentials\",\n  //     \"scope\": \"private purchased create edit delete interact upload promo_codes video_files scim public\"\n  //   },\n  //   {\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Authorization': `bearer ${accessToken}`,\n  //       'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n  //     },\n  //   }\n  // )\n  // console.log(1, newAccessToken.data)\n  // console.log(2, uriVideo)\n  // window.location.href = `${hostApp}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=http://localhost:3000/&state=\"helloUser\"&scope=private`;\n  // const redirectUser = await axios.get(\n  //   `${host}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=${uriVideo}&state=\"helloUser\"&scope=${newAccessToken.data.scope}`,\n  //   {\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       // 'Authorization': `bearer ${accessToken}`,\n  //       'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n  //     },\n  //   }\n  // )\n  //\n  // console.log(redirectUser)\n  // return newAccessToken.data\n  // }\n\n  static getArrayVideoService = async () => {\n    const response = await axios.get(`${hostVideo}/users/${userId}/videos`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `bearer ${accessToken}`,\n        Accept: \"application/vnd.vimeo.*+json;version=3.4\",\n      },\n    })\n    console.log(response)\n    return response.data\n  }\n\n  static removeCardByIdService = async (id: string | number, newAccessToken: string) => {\n    const responseRemove = await axios.delete(`${hostVideo}${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `bearer ${newAccessToken}`,\n        Accept: \"application/vnd.vimeo.*+json;version=3.4\",\n      },\n    })\n    console.log(responseRemove)\n    // return response.data\n  }\n\n  static editCardByIdService = async (id: string | number, newAccessToken: string) => {\n    const response = await axios.patch(\n      `${hostVideo}${id}`,\n      {},\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `bearer ${newAccessToken}`,\n          Accept: \"application/vnd.vimeo.*+json;version=3.4\",\n        },\n      }\n    )\n    console.log(response)\n    return response.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}