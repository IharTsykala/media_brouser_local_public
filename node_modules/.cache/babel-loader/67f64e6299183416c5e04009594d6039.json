{"ast":null,"code":"var _jsxFileName = \"/home/ihartsykala/projects/playy/media_brouser_local_public/src/layouts/LayoutContainerUpload/LayoutContainerUpload.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box } from \"@sanity/ui\";\nimport { useDrop } from \"react-dnd\";\nimport { NativeTypes } from \"react-dnd-html5-backend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LayoutContainerUpload = ({\n  children,\n  onDrop,\n  setArrayContentCard,\n  typeArrayContentCard\n}) => {\n  _s();\n\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: [NativeTypes.FILE],\n\n    drop(inputTarget) {\n      if (onDrop) {\n        const inputTargetFiles = typeArrayContentCard === \"single\" ? [inputTarget.files[0]] : inputTarget.files;\n        onDrop(inputTargetFiles, setArrayContentCard);\n      }\n    },\n\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }));\n  const isActive = canDrop && isOver;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"layout-upload-box__container\",\n    style: {\n      border: `1px ${isActive ? \"green\" : \"white\"} dotted`\n    },\n    ref: drop,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LayoutContainerUpload, \"F504N0wuFSbvI1XEbEwXUidFCiM=\", false, function () {\n  return [useDrop];\n});\n\n_c = LayoutContainerUpload;\nexport default LayoutContainerUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutContainerUpload\");","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/src/layouts/LayoutContainerUpload/LayoutContainerUpload.tsx"],"names":["React","Box","useDrop","NativeTypes","LayoutContainerUpload","children","onDrop","setArrayContentCard","typeArrayContentCard","canDrop","isOver","drop","accept","FILE","inputTarget","inputTargetFiles","files","collect","monitor","isActive","border"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAA4BC,OAA5B,QAA2C,WAA3C;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAUA,MAAMC,qBAA0E,GAAG,CAAC;AAClFC,EAAAA,QADkF;AAElFC,EAAAA,MAFkF;AAGlFC,EAAAA,mBAHkF;AAIlFC,EAAAA;AAJkF,CAAD,KAK7E;AAAA;;AACJ,QAAM,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAsBC,IAAtB,IAA8BT,OAAO,CAAC,OAAO;AACjDU,IAAAA,MAAM,EAAE,CAACT,WAAW,CAACU,IAAb,CADyC;;AAEjDF,IAAAA,IAAI,CAACG,WAAD,EAAgC;AAClC,UAAIR,MAAJ,EAAY;AACV,cAAMS,gBAAgB,GAAGP,oBAAoB,KAAK,QAAzB,GAAoC,CAACM,WAAW,CAACE,KAAZ,CAAkB,CAAlB,CAAD,CAApC,GAA6DF,WAAW,CAACE,KAAlG;AACAV,QAAAA,MAAM,CAACS,gBAAD,EAAmBR,mBAAnB,CAAN;AACD;AACF,KAPgD;;AAQjDU,IAAAA,OAAO,EAAGC,OAAD,KAAiC;AACxCR,MAAAA,MAAM,EAAEQ,OAAO,CAACR,MAAR,EADgC;AAExCD,MAAAA,OAAO,EAAES,OAAO,CAACT,OAAR;AAF+B,KAAjC;AARwC,GAAP,CAAD,CAA3C;AAcA,QAAMU,QAAQ,GAAGV,OAAO,IAAIC,MAA5B;AAEA,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,EAAE,8BADb;AAEE,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAG,OAAMD,QAAQ,GAAG,OAAH,GAAa,OAAQ;AAA9C,KAFT;AAGE,IAAA,GAAG,EAAER,IAHP;AAAA,cAKGN;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA/BD;;GAAMD,qB;UAMgCF,O;;;KANhCE,qB;AAiCN,eAAeA,qBAAf","sourcesContent":["import React from \"react\"\nimport { Box } from \"@sanity/ui\"\nimport { DropTargetMonitor, useDrop } from \"react-dnd\"\nimport { NativeTypes } from \"react-dnd-html5-backend\"\nimport { Dispatch, InterfaceContentCard } from \"../../services/interfacesAndTypes/common\"\nimport { OnDrop } from \"../../services/interfacesAndTypes/img\"\n\ntype LayoutContainerUploadProps = {\n  setArrayContentCard: Dispatch<InterfaceContentCard[]>,\n  onDrop: OnDrop,\n  typeArrayContentCard?: string,\n}\n\nconst LayoutContainerUpload: React.FunctionComponent<LayoutContainerUploadProps> = ({\n  children,\n  onDrop,\n  setArrayContentCard,\n  typeArrayContentCard,\n}) => {\n  const [{ canDrop, isOver }, drop] = useDrop(() => ({\n    accept: [NativeTypes.FILE],\n    drop(inputTarget: { files: any[] }) {\n      if (onDrop) {\n        const inputTargetFiles = typeArrayContentCard === \"single\" ? [inputTarget.files[0]] : inputTarget.files\n        onDrop(inputTargetFiles, setArrayContentCard)\n      }\n    },\n    collect: (monitor: DropTargetMonitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  }))\n\n  const isActive = canDrop && isOver\n\n  return (\n    <Box\n      className={\"layout-upload-box__container\"}\n      style={{ border: `1px ${isActive ? \"green\" : \"white\"} dotted` }}\n      ref={drop}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport default LayoutContainerUpload\n"]},"metadata":{},"sourceType":"module"}