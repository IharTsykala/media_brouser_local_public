{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;\n\nimport { css } from \"styled-components\";\nimport { rem } from \"../../styles\";\nimport { focusRingStyle } from \"../../styles/internal\";\n\nfunction switchBaseStyles() {\n  return css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    position: relative;\\n    &:not([hidden]) {\\n      display: inline-block;\\n    }\\n  \"])));\n}\n\nfunction switchInputStyles() {\n  return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    opacity: 0;\\n    height: 100%;\\n    width: 100%;\\n    outline: none;\\n    padding: 0;\\n    margin: 0;\\n\\n    /* Place the input element above the representation element */\\n    z-index: 1;\\n  \"])));\n}\n\nfunction switchRepresentationStyles(props) {\n  var theme = props.theme;\n  var _theme$sanity = theme.sanity,\n      focusRing = _theme$sanity.focusRing,\n      input = _theme$sanity.input;\n  var color = theme.sanity.color.button.default;\n  return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    --switch-bg-color: \", \";\\n    --switch-fg-color: \", \";\\n    --switch-box-shadow: none;\\n\\n    &:not([hidden]) {\\n      display: block;\\n    }\\n    position: relative;\\n    width: \", \";\\n    height: \", \";\\n    border-radius: \", \";\\n\\n    /* Make sure it\\u2019s not possible to interact with the wrapper element */\\n    pointer-events: none;\\n\\n    &:after {\\n      content: '';\\n      display: block;\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      right: 0;\\n      bottom: 0;\\n      z-index: 1;\\n      box-shadow: var(--switch-box-shadow);\\n      border-radius: inherit;\\n    }\\n\\n    /* Focus styles */\\n    input:focus + && {\\n      --switch-box-shadow: \", \";\\n    }\\n\\n    input:focus:not(:focus-visible) + && {\\n      --switch-box-shadow: none;\\n    }\\n\\n    input:checked + && {\\n      --switch-bg-color: \", \";\\n      --switch-fg-color: \", \";\\n    }\\n\\n    @media (hover: hover) {\\n      input:not(:disabled):hover + && {\\n        --switch-bg-color: \", \";\\n        --switch-fg-color: \", \";\\n      }\\n\\n      input:not(:disabled):checked:hover + && {\\n        --switch-bg-color: \", \";\\n        --switch-fg-color: \", \";\\n      }\\n    }\\n\\n    input:not([data-read-only]):disabled + && {\\n      --switch-bg-color: \", \";\\n      --switch-fg-color: \", \";\\n    }\\n  \"])), color.default.enabled.bg, color.default.enabled.fg, rem(input.switch.width), rem(input.switch.height), rem(input.switch.height / 2), focusRingStyle({\n    focusRing: focusRing\n  }), color.positive.enabled.bg, color.positive.enabled.fg, color.default.hovered.bg, color.default.hovered.fg, color.positive.hovered.bg, color.positive.hovered.fg, color.default.disabled.bg, color.default.disabled.fg);\n}\n\nfunction switchTrackStyles(props) {\n  var theme = props.theme;\n  var input = theme.sanity.input;\n  return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    &:not([hidden]) {\\n      display: block;\\n    }\\n    background-color: var(--switch-bg-color);\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    width: \", \";\\n    height: \", \";\\n    border-radius: \", \";\\n  \"])), rem(input.switch.width), rem(input.switch.height), rem(input.switch.height / 2));\n}\n\nfunction switchThumbStyles(props) {\n  var $indeterminate = props.$indeterminate,\n      theme = props.theme;\n  var input = theme.sanity.input;\n  var trackWidth = input.switch.width;\n  var trackHeight = input.switch.height;\n  var trackPadding = input.switch.padding;\n  var size = trackHeight - input.switch.padding * 2;\n  var checkedOffset = trackWidth - trackPadding * 2 - size;\n  var indeterminateOffset = trackWidth / 2 - size / 2 - trackPadding;\n  var checked = $indeterminate !== true && props.$checked === true;\n  return css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    &:not([hidden]) {\\n      display: block;\\n    }\\n    position: absolute;\\n    left: \", \";\\n    top: \", \";\\n    height: \", \";\\n    width: \", \";\\n    border-radius: \", \";\\n    transition-property: transform;\\n    transition-duration: \", \"ms;\\n    transition-timing-function: \", \";\\n    background: var(--switch-fg-color);\\n    transform: translate3d(0, 0, 0);\\n\\n    \", \"\\n\\n    \", \"\\n  \"])), rem(trackPadding), rem(trackPadding), rem(size), rem(size), rem(size / 2), input.switch.transitionDurationMs, input.switch.transitionTimingFunction, checked && css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n      transform: translate3d(\", \"px, 0, 0);\\n    \"])), checkedOffset), $indeterminate && css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n      transform: translate3d(\", \"px, 0, 0);\\n    \"])), indeterminateOffset));\n}\n\nexport { switchBaseStyles, switchInputStyles, switchRepresentationStyles, switchThumbStyles, switchTrackStyles };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/primitives/switch/styles.js"],"names":["css","rem","focusRingStyle","switchBaseStyles","switchInputStyles","switchRepresentationStyles","props","theme","sanity","focusRing","input","color","button","default","enabled","bg","fg","switch","width","height","positive","hovered","disabled","switchTrackStyles","switchThumbStyles","$indeterminate","trackWidth","trackHeight","trackPadding","padding","size","checkedOffset","indeterminateOffset","checked","$checked","transitionDurationMs","transitionTimingFunction"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AACA,SAASC,gBAAT,GAA4B;AAC1B,SAAOH,GAAP;AAMD;;AACD,SAASI,iBAAT,GAA6B;AAC3B,SAAOJ,GAAP;AAgBD;;AACD,SAASK,0BAAT,CAAoCC,KAApC,EAA2C;AACzC,MAAQC,KAAR,GAAkBD,KAAlB,CAAQC,KAAR;AACA,sBAA6BA,KAAK,CAACC,MAAnC;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,KAAnB,iBAAmBA,KAAnB;AACA,MAAMC,KAAK,GAAGJ,KAAK,CAACC,MAAN,CAAaG,KAAb,CAAmBC,MAAnB,CAA0BC,OAAxC;AACA,SAAOb,GAAP,+0CACuBW,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC,EAD7C,EAEuBJ,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBE,EAF7C,EASWf,GAAG,CAACS,KAAK,CAACO,MAAN,CAAaC,KAAd,CATd,EAUYjB,GAAG,CAACS,KAAK,CAACO,MAAN,CAAaE,MAAd,CAVf,EAWmBlB,GAAG,CAACS,KAAK,CAACO,MAAN,CAAaE,MAAb,GAAsB,CAAvB,CAXtB,EA+B2BjB,cAAc,CAAC;AAAEO,IAAAA,SAAS,EAATA;AAAF,GAAD,CA/BzC,EAuCyBE,KAAK,CAACS,QAAN,CAAeN,OAAf,CAAuBC,EAvChD,EAwCyBJ,KAAK,CAACS,QAAN,CAAeN,OAAf,CAAuBE,EAxChD,EA6C2BL,KAAK,CAACE,OAAN,CAAcQ,OAAd,CAAsBN,EA7CjD,EA8C2BJ,KAAK,CAACE,OAAN,CAAcQ,OAAd,CAAsBL,EA9CjD,EAkD2BL,KAAK,CAACS,QAAN,CAAeC,OAAf,CAAuBN,EAlDlD,EAmD2BJ,KAAK,CAACS,QAAN,CAAeC,OAAf,CAAuBL,EAnDlD,EAwDyBL,KAAK,CAACE,OAAN,CAAcS,QAAd,CAAuBP,EAxDhD,EAyDyBJ,KAAK,CAACE,OAAN,CAAcS,QAAd,CAAuBN,EAzDhD;AA4DD;;AACD,SAASO,iBAAT,CAA2BjB,KAA3B,EAAkC;AAChC,MAAQC,KAAR,GAAkBD,KAAlB,CAAQC,KAAR;AACA,MAAQG,KAAR,GAAkBH,KAAK,CAACC,MAAxB,CAAQE,KAAR;AACA,SAAOV,GAAP,mSAQWC,GAAG,CAACS,KAAK,CAACO,MAAN,CAAaC,KAAd,CARd,EASYjB,GAAG,CAACS,KAAK,CAACO,MAAN,CAAaE,MAAd,CATf,EAUmBlB,GAAG,CAACS,KAAK,CAACO,MAAN,CAAaE,MAAb,GAAsB,CAAvB,CAVtB;AAYD;;AACD,SAASK,iBAAT,CAA2BlB,KAA3B,EAAkC;AAChC,MAAQmB,cAAR,GAAkCnB,KAAlC,CAAQmB,cAAR;AAAA,MAAwBlB,KAAxB,GAAkCD,KAAlC,CAAwBC,KAAxB;AACA,MAAQG,KAAR,GAAkBH,KAAK,CAACC,MAAxB,CAAQE,KAAR;AACA,MAAMgB,UAAU,GAAGhB,KAAK,CAACO,MAAN,CAAaC,KAAhC;AACA,MAAMS,WAAW,GAAGjB,KAAK,CAACO,MAAN,CAAaE,MAAjC;AACA,MAAMS,YAAY,GAAGlB,KAAK,CAACO,MAAN,CAAaY,OAAlC;AACA,MAAMC,IAAI,GAAGH,WAAW,GAAGjB,KAAK,CAACO,MAAN,CAAaY,OAAb,GAAuB,CAAlD;AACA,MAAME,aAAa,GAAGL,UAAU,GAAGE,YAAY,GAAG,CAA5B,GAAgCE,IAAtD;AACA,MAAME,mBAAmB,GAAGN,UAAU,GAAG,CAAb,GAAiBI,IAAI,GAAG,CAAxB,GAA4BF,YAAxD;AACA,MAAMK,OAAO,GAAGR,cAAc,KAAK,IAAnB,IAA2BnB,KAAK,CAAC4B,QAAN,KAAmB,IAA9D;AACA,SAAOlC,GAAP,+cAKUC,GAAG,CAAC2B,YAAD,CALb,EAMS3B,GAAG,CAAC2B,YAAD,CANZ,EAOY3B,GAAG,CAAC6B,IAAD,CAPf,EAQW7B,GAAG,CAAC6B,IAAD,CARd,EASmB7B,GAAG,CAAC6B,IAAI,GAAG,CAAR,CATtB,EAWyBpB,KAAK,CAACO,MAAN,CAAakB,oBAXtC,EAYgCzB,KAAK,CAACO,MAAN,CAAamB,wBAZ7C,EAgBIH,OAAO,IAAIjC,GAAJ,2HACkB+B,aADlB,CAhBX,EAoBIN,cAAc,IAAIzB,GAAJ,2HACWgC,mBADX,CApBlB;AAwBD;;AACD,SACE7B,gBADF,EAEEC,iBAFF,EAGEC,0BAHF,EAIEmB,iBAJF,EAKED,iBALF","sourcesContent":["import { css } from \"styled-components\";\nimport { rem } from \"../../styles\";\nimport { focusRingStyle } from \"../../styles/internal\";\nfunction switchBaseStyles() {\n  return css`\n    position: relative;\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `;\n}\nfunction switchInputStyles() {\n  return css`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    padding: 0;\n    margin: 0;\n\n    /* Place the input element above the representation element */\n    z-index: 1;\n  `;\n}\nfunction switchRepresentationStyles(props) {\n  const { theme } = props;\n  const { focusRing, input } = theme.sanity;\n  const color = theme.sanity.color.button.default;\n  return css`\n    --switch-bg-color: ${color.default.enabled.bg};\n    --switch-fg-color: ${color.default.enabled.fg};\n    --switch-box-shadow: none;\n\n    &:not([hidden]) {\n      display: block;\n    }\n    position: relative;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n\n    /* Make sure itâ€™s not possible to interact with the wrapper element */\n    pointer-events: none;\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      box-shadow: var(--switch-box-shadow);\n      border-radius: inherit;\n    }\n\n    /* Focus styles */\n    input:focus + && {\n      --switch-box-shadow: ${focusRingStyle({ focusRing })};\n    }\n\n    input:focus:not(:focus-visible) + && {\n      --switch-box-shadow: none;\n    }\n\n    input:checked + && {\n      --switch-bg-color: ${color.positive.enabled.bg};\n      --switch-fg-color: ${color.positive.enabled.fg};\n    }\n\n    @media (hover: hover) {\n      input:not(:disabled):hover + && {\n        --switch-bg-color: ${color.default.hovered.bg};\n        --switch-fg-color: ${color.default.hovered.fg};\n      }\n\n      input:not(:disabled):checked:hover + && {\n        --switch-bg-color: ${color.positive.hovered.bg};\n        --switch-fg-color: ${color.positive.hovered.fg};\n      }\n    }\n\n    input:not([data-read-only]):disabled + && {\n      --switch-bg-color: ${color.default.disabled.bg};\n      --switch-fg-color: ${color.default.disabled.fg};\n    }\n  `;\n}\nfunction switchTrackStyles(props) {\n  const { theme } = props;\n  const { input } = theme.sanity;\n  return css`\n    &:not([hidden]) {\n      display: block;\n    }\n    background-color: var(--switch-bg-color);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n  `;\n}\nfunction switchThumbStyles(props) {\n  const { $indeterminate, theme } = props;\n  const { input } = theme.sanity;\n  const trackWidth = input.switch.width;\n  const trackHeight = input.switch.height;\n  const trackPadding = input.switch.padding;\n  const size = trackHeight - input.switch.padding * 2;\n  const checkedOffset = trackWidth - trackPadding * 2 - size;\n  const indeterminateOffset = trackWidth / 2 - size / 2 - trackPadding;\n  const checked = $indeterminate !== true && props.$checked === true;\n  return css`\n    &:not([hidden]) {\n      display: block;\n    }\n    position: absolute;\n    left: ${rem(trackPadding)};\n    top: ${rem(trackPadding)};\n    height: ${rem(size)};\n    width: ${rem(size)};\n    border-radius: ${rem(size / 2)};\n    transition-property: transform;\n    transition-duration: ${input.switch.transitionDurationMs}ms;\n    transition-timing-function: ${input.switch.transitionTimingFunction};\n    background: var(--switch-fg-color);\n    transform: translate3d(0, 0, 0);\n\n    ${checked && css`\n      transform: translate3d(${checkedOffset}px, 0, 0);\n    `}\n\n    ${$indeterminate && css`\n      transform: translate3d(${indeterminateOffset}px, 0, 0);\n    `}\n  `;\n}\nexport {\n  switchBaseStyles,\n  switchInputStyles,\n  switchRepresentationStyles,\n  switchThumbStyles,\n  switchTrackStyles\n};\n"]},"metadata":{},"sourceType":"module"}