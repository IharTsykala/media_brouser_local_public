{"ast":null,"code":"import { css } from \"styled-components\";\nimport { rem } from \"../../styles\";\nimport { focusRingStyle } from \"../../styles/internal\";\n\nfunction switchBaseStyles() {\n  return css`\n    position: relative;\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `;\n}\n\nfunction switchInputStyles() {\n  return css`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    padding: 0;\n    margin: 0;\n\n    /* Place the input element above the representation element */\n    z-index: 1;\n  `;\n}\n\nfunction switchRepresentationStyles(props) {\n  const {\n    theme\n  } = props;\n  const {\n    focusRing,\n    input\n  } = theme.sanity;\n  const color = theme.sanity.color.button.default;\n  return css`\n    --switch-bg-color: ${color.default.enabled.bg};\n    --switch-fg-color: ${color.default.enabled.fg};\n    --switch-box-shadow: none;\n\n    &:not([hidden]) {\n      display: block;\n    }\n    position: relative;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n\n    /* Make sure it’s not possible to interact with the wrapper element */\n    pointer-events: none;\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      box-shadow: var(--switch-box-shadow);\n      border-radius: inherit;\n    }\n\n    /* Focus styles */\n    input:focus + && {\n      --switch-box-shadow: ${focusRingStyle({\n    focusRing\n  })};\n    }\n\n    input:focus:not(:focus-visible) + && {\n      --switch-box-shadow: none;\n    }\n\n    input:checked + && {\n      --switch-bg-color: ${color.positive.enabled.bg};\n      --switch-fg-color: ${color.positive.enabled.fg};\n    }\n\n    @media (hover: hover) {\n      input:not(:disabled):hover + && {\n        --switch-bg-color: ${color.default.hovered.bg};\n        --switch-fg-color: ${color.default.hovered.fg};\n      }\n\n      input:not(:disabled):checked:hover + && {\n        --switch-bg-color: ${color.positive.hovered.bg};\n        --switch-fg-color: ${color.positive.hovered.fg};\n      }\n    }\n\n    input:not([data-read-only]):disabled + && {\n      --switch-bg-color: ${color.default.disabled.bg};\n      --switch-fg-color: ${color.default.disabled.fg};\n    }\n  `;\n}\n\nfunction switchTrackStyles(props) {\n  const {\n    theme\n  } = props;\n  const {\n    input\n  } = theme.sanity;\n  return css`\n    &:not([hidden]) {\n      display: block;\n    }\n    background-color: var(--switch-bg-color);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n  `;\n}\n\nfunction switchThumbStyles(props) {\n  const {\n    $indeterminate,\n    theme\n  } = props;\n  const {\n    input\n  } = theme.sanity;\n  const trackWidth = input.switch.width;\n  const trackHeight = input.switch.height;\n  const trackPadding = input.switch.padding;\n  const size = trackHeight - input.switch.padding * 2;\n  const checkedOffset = trackWidth - trackPadding * 2 - size;\n  const indeterminateOffset = trackWidth / 2 - size / 2 - trackPadding;\n  const checked = $indeterminate !== true && props.$checked === true;\n  return css`\n    &:not([hidden]) {\n      display: block;\n    }\n    position: absolute;\n    left: ${rem(trackPadding)};\n    top: ${rem(trackPadding)};\n    height: ${rem(size)};\n    width: ${rem(size)};\n    border-radius: ${rem(size / 2)};\n    transition-property: transform;\n    transition-duration: ${input.switch.transitionDurationMs}ms;\n    transition-timing-function: ${input.switch.transitionTimingFunction};\n    background: var(--switch-fg-color);\n    transform: translate3d(0, 0, 0);\n\n    ${checked && css`\n      transform: translate3d(${checkedOffset}px, 0, 0);\n    `}\n\n    ${$indeterminate && css`\n      transform: translate3d(${indeterminateOffset}px, 0, 0);\n    `}\n  `;\n}\n\nexport { switchBaseStyles, switchInputStyles, switchRepresentationStyles, switchThumbStyles, switchTrackStyles };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/primitives/switch/styles.js"],"names":["css","rem","focusRingStyle","switchBaseStyles","switchInputStyles","switchRepresentationStyles","props","theme","focusRing","input","sanity","color","button","default","enabled","bg","fg","switch","width","height","positive","hovered","disabled","switchTrackStyles","switchThumbStyles","$indeterminate","trackWidth","trackHeight","trackPadding","padding","size","checkedOffset","indeterminateOffset","checked","$checked","transitionDurationMs","transitionTimingFunction"],"mappings":"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","sourcesContent":["import { css } from \"styled-components\";\nimport { rem } from \"../../styles\";\nimport { focusRingStyle } from \"../../styles/internal\";\nfunction switchBaseStyles() {\n  return css`\n    position: relative;\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `;\n}\nfunction switchInputStyles() {\n  return css`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    padding: 0;\n    margin: 0;\n\n    /* Place the input element above the representation element */\n    z-index: 1;\n  `;\n}\nfunction switchRepresentationStyles(props) {\n  const { theme } = props;\n  const { focusRing, input } = theme.sanity;\n  const color = theme.sanity.color.button.default;\n  return css`\n    --switch-bg-color: ${color.default.enabled.bg};\n    --switch-fg-color: ${color.default.enabled.fg};\n    --switch-box-shadow: none;\n\n    &:not([hidden]) {\n      display: block;\n    }\n    position: relative;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n\n    /* Make sure it’s not possible to interact with the wrapper element */\n    pointer-events: none;\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      box-shadow: var(--switch-box-shadow);\n      border-radius: inherit;\n    }\n\n    /* Focus styles */\n    input:focus + && {\n      --switch-box-shadow: ${focusRingStyle({ focusRing })};\n    }\n\n    input:focus:not(:focus-visible) + && {\n      --switch-box-shadow: none;\n    }\n\n    input:checked + && {\n      --switch-bg-color: ${color.positive.enabled.bg};\n      --switch-fg-color: ${color.positive.enabled.fg};\n    }\n\n    @media (hover: hover) {\n      input:not(:disabled):hover + && {\n        --switch-bg-color: ${color.default.hovered.bg};\n        --switch-fg-color: ${color.default.hovered.fg};\n      }\n\n      input:not(:disabled):checked:hover + && {\n        --switch-bg-color: ${color.positive.hovered.bg};\n        --switch-fg-color: ${color.positive.hovered.fg};\n      }\n    }\n\n    input:not([data-read-only]):disabled + && {\n      --switch-bg-color: ${color.default.disabled.bg};\n      --switch-fg-color: ${color.default.disabled.fg};\n    }\n  `;\n}\nfunction switchTrackStyles(props) {\n  const { theme } = props;\n  const { input } = theme.sanity;\n  return css`\n    &:not([hidden]) {\n      display: block;\n    }\n    background-color: var(--switch-bg-color);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: ${rem(input.switch.width)};\n    height: ${rem(input.switch.height)};\n    border-radius: ${rem(input.switch.height / 2)};\n  `;\n}\nfunction switchThumbStyles(props) {\n  const { $indeterminate, theme } = props;\n  const { input } = theme.sanity;\n  const trackWidth = input.switch.width;\n  const trackHeight = input.switch.height;\n  const trackPadding = input.switch.padding;\n  const size = trackHeight - input.switch.padding * 2;\n  const checkedOffset = trackWidth - trackPadding * 2 - size;\n  const indeterminateOffset = trackWidth / 2 - size / 2 - trackPadding;\n  const checked = $indeterminate !== true && props.$checked === true;\n  return css`\n    &:not([hidden]) {\n      display: block;\n    }\n    position: absolute;\n    left: ${rem(trackPadding)};\n    top: ${rem(trackPadding)};\n    height: ${rem(size)};\n    width: ${rem(size)};\n    border-radius: ${rem(size / 2)};\n    transition-property: transform;\n    transition-duration: ${input.switch.transitionDurationMs}ms;\n    transition-timing-function: ${input.switch.transitionTimingFunction};\n    background: var(--switch-fg-color);\n    transform: translate3d(0, 0, 0);\n\n    ${checked && css`\n      transform: translate3d(${checkedOffset}px, 0, 0);\n    `}\n\n    ${$indeterminate && css`\n      transform: translate3d(${indeterminateOffset}px, 0, 0);\n    `}\n  `;\n}\nexport {\n  switchBaseStyles,\n  switchInputStyles,\n  switchRepresentationStyles,\n  switchThumbStyles,\n  switchTrackStyles\n};\n"]},"metadata":{},"sourceType":"module"}