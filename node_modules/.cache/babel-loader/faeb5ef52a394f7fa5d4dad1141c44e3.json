{"ast":null,"code":"import { put, takeEvery } from \"redux-saga/effects\";\nimport { ActionTypes, getFailureAction, setArrayVideo } from \"./video.actions\";\nimport videoService from \"../../../services/api/videoService\";\n\nfunction* getArrayVideoSaga() {\n  try {\n    // const accessToken = yield videoService.getRedirectToAllowPageService()\n    // const response = yield videoService.getArrayVideoService()\n    yield put(setArrayVideo(response.data)); // console.log(\"getArray\", response)\n  } catch (e) {\n    yield put(getFailureAction(e));\n  }\n}\n\nfunction* removeCardByIdSaga(action) {\n  try {\n    const responseAccessToken = yield videoService.getNewAccessTokenService(action.payload); // const response = yield videoService.removeCardByIdService(action.payload, responseAccessToken.access_token)\n    // console.log(\"remove\",response)\n  } catch (e) {\n    yield put(getFailureAction(e));\n  }\n}\n\nfunction* editCardByIdSaga(action) {\n  try {\n    const responseAccessToken = yield videoService.getNewAccessTokenService(action.payload);\n    const response = yield videoService.editCardByIdService(action.payload, responseAccessToken.access_token);\n    console.log(\"edit\", response);\n  } catch (e) {\n    yield put(getFailureAction(e));\n  }\n}\n\nexport default function* videoSaga() {\n  yield takeEvery(ActionTypes.GET_ARRAY_VIDEO, getArrayVideoSaga);\n  yield takeEvery(ActionTypes.REMOVE_CARD_BY_ID, removeCardByIdSaga);\n  yield takeEvery(ActionTypes.EDIT_CARD_BY_ID, editCardByIdSaga);\n}","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/src/Redux/store/video/video.saga.ts"],"names":["put","takeEvery","ActionTypes","getFailureAction","setArrayVideo","videoService","getArrayVideoSaga","response","data","e","removeCardByIdSaga","action","responseAccessToken","getNewAccessTokenService","payload","editCardByIdSaga","editCardByIdService","access_token","console","log","videoSaga","GET_ARRAY_VIDEO","REMOVE_CARD_BY_ID","EDIT_CARD_BY_ID"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,aAAxC,QAA6D,iBAA7D;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,UAAUC,iBAAV,GAA8B;AAC5B,MAAI;AACF;AACA;AACA,UAAMN,GAAG,CAACI,aAAa,CAACG,QAAQ,CAACC,IAAV,CAAd,CAAT,CAHE,CAIF;AACD,GALD,CAKE,OAAOC,CAAP,EAAU;AACV,UAAMT,GAAG,CAACG,gBAAgB,CAACM,CAAD,CAAjB,CAAT;AACD;AACF;;AAED,UAAUC,kBAAV,CAA6BC,MAA7B,EAA0C;AACxC,MAAI;AACF,UAAMC,mBAAmB,GAAG,MAAMP,YAAY,CAACQ,wBAAb,CAAsCF,MAAM,CAACG,OAA7C,CAAlC,CADE,CAEF;AAEA;AACD,GALD,CAKE,OAAOL,CAAP,EAAU;AACV,UAAMT,GAAG,CAACG,gBAAgB,CAACM,CAAD,CAAjB,CAAT;AACD;AACF;;AAED,UAAUM,gBAAV,CAA2BJ,MAA3B,EAAwC;AACtC,MAAI;AACF,UAAMC,mBAAmB,GAAG,MAAMP,YAAY,CAACQ,wBAAb,CAAsCF,MAAM,CAACG,OAA7C,CAAlC;AACA,UAAMP,QAAQ,GAAG,MAAMF,YAAY,CAACW,mBAAb,CAAiCL,MAAM,CAACG,OAAxC,EAAiDF,mBAAmB,CAACK,YAArE,CAAvB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBZ,QAAnB;AACD,GALD,CAKE,OAAOE,CAAP,EAAU;AACV,UAAMT,GAAG,CAACG,gBAAgB,CAACM,CAAD,CAAjB,CAAT;AACD;AACF;;AAED,eAAe,UAAUW,SAAV,GAAsB;AACnC,QAAMnB,SAAS,CAACC,WAAW,CAACmB,eAAb,EAA8Bf,iBAA9B,CAAf;AACA,QAAML,SAAS,CAACC,WAAW,CAACoB,iBAAb,EAAgCZ,kBAAhC,CAAf;AACA,QAAMT,SAAS,CAACC,WAAW,CAACqB,eAAb,EAA8BR,gBAA9B,CAAf;AACD","sourcesContent":["import { put, takeEvery } from \"redux-saga/effects\"\nimport { ActionTypes, getFailureAction, setArrayVideo } from \"./video.actions\"\nimport videoService from \"../../../services/api/videoService\";\n\nfunction* getArrayVideoSaga() {\n  try {\n    // const accessToken = yield videoService.getRedirectToAllowPageService()\n    // const response = yield videoService.getArrayVideoService()\n    yield put(setArrayVideo(response.data))\n    // console.log(\"getArray\", response)\n  } catch (e) {\n    yield put(getFailureAction(e))\n  }\n}\n\nfunction* removeCardByIdSaga(action: any) {\n  try {\n    const responseAccessToken = yield videoService.getNewAccessTokenService(action.payload)\n    // const response = yield videoService.removeCardByIdService(action.payload, responseAccessToken.access_token)\n\n    // console.log(\"remove\",response)\n  } catch (e) {\n    yield put(getFailureAction(e))\n  }\n}\n\nfunction* editCardByIdSaga(action: any) {\n  try {\n    const responseAccessToken = yield videoService.getNewAccessTokenService(action.payload)\n    const response = yield videoService.editCardByIdService(action.payload, responseAccessToken.access_token)\n\n    console.log(\"edit\",response)\n  } catch (e) {\n    yield put(getFailureAction(e))\n  }\n}\n\nexport default function* videoSaga() {\n  yield takeEvery(ActionTypes.GET_ARRAY_VIDEO, getArrayVideoSaga)\n  yield takeEvery(ActionTypes.REMOVE_CARD_BY_ID, removeCardByIdSaga)\n  yield takeEvery(ActionTypes.EDIT_CARD_BY_ID, editCardByIdSaga)\n}\n"]},"metadata":{},"sourceType":"module"}