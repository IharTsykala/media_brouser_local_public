{"ast":null,"code":"function _findPrevItemElement(state, itemElements, focusedElement) {\n  var _a;\n\n  const idx = itemElements.indexOf(focusedElement);\n  const els = itemElements.slice(0, idx);\n  const len = els.length;\n\n  for (let i = len - 1; i >= 0; i -= 1) {\n    const itemKey = els[i].getAttribute(\"data-tree-key\");\n\n    if (!itemKey) {\n      continue;\n    }\n\n    const segments = itemKey.split(\"/\");\n    segments.pop();\n    const p = [];\n    let expanded = true;\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j]);\n      const k = p.join(\"/\");\n\n      if (!((_a = state[k]) == null ? void 0 : _a.expanded)) {\n        expanded = false;\n        break;\n      }\n    }\n\n    if (expanded) {\n      return els[i];\n    }\n  }\n\n  return null;\n}\n\nfunction _findNextItemElement(state, itemElements, focusedElement) {\n  var _a;\n\n  const idx = itemElements.indexOf(focusedElement);\n  const els = itemElements.slice(idx);\n  const len = itemElements.length;\n\n  for (let i = 1; i < len; i += 1) {\n    if (!els[i]) {\n      continue;\n    }\n\n    const itemKey = els[i].getAttribute(\"data-tree-key\");\n\n    if (!itemKey) {\n      continue;\n    }\n\n    const segments = itemKey.split(\"/\");\n    segments.pop();\n    const p = [];\n    let expanded = true;\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j]);\n      const k = p.join(\"/\");\n\n      if (!((_a = state[k]) == null ? void 0 : _a.expanded)) {\n        expanded = false;\n        break;\n      }\n    }\n\n    if (expanded) {\n      return els[i];\n    }\n  }\n\n  return null;\n}\n\nfunction _focusItemElement(el) {\n  if (el.getAttribute(\"role\") === \"treeitem\") {\n    el.focus();\n  }\n\n  if (el.getAttribute(\"role\") === \"none\") {\n    const firstChild = el.firstChild;\n\n    if (firstChild && firstChild instanceof HTMLElement) {\n      firstChild.focus();\n    }\n  }\n}\n\nexport { _findNextItemElement, _findPrevItemElement, _focusItemElement };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/components/tree/helpers.js"],"names":["_findPrevItemElement","state","itemElements","focusedElement","_a","idx","indexOf","els","slice","len","length","i","itemKey","getAttribute","segments","split","pop","p","expanded","j","push","k","join","_findNextItemElement","_focusItemElement","el","focus","firstChild","HTMLElement"],"mappings":"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","sourcesContent":["function _findPrevItemElement(state, itemElements, focusedElement) {\n  var _a;\n  const idx = itemElements.indexOf(focusedElement);\n  const els = itemElements.slice(0, idx);\n  const len = els.length;\n  for (let i = len - 1; i >= 0; i -= 1) {\n    const itemKey = els[i].getAttribute(\"data-tree-key\");\n    if (!itemKey) {\n      continue;\n    }\n    const segments = itemKey.split(\"/\");\n    segments.pop();\n    const p = [];\n    let expanded = true;\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j]);\n      const k = p.join(\"/\");\n      if (!((_a = state[k]) == null ? void 0 : _a.expanded)) {\n        expanded = false;\n        break;\n      }\n    }\n    if (expanded) {\n      return els[i];\n    }\n  }\n  return null;\n}\nfunction _findNextItemElement(state, itemElements, focusedElement) {\n  var _a;\n  const idx = itemElements.indexOf(focusedElement);\n  const els = itemElements.slice(idx);\n  const len = itemElements.length;\n  for (let i = 1; i < len; i += 1) {\n    if (!els[i]) {\n      continue;\n    }\n    const itemKey = els[i].getAttribute(\"data-tree-key\");\n    if (!itemKey) {\n      continue;\n    }\n    const segments = itemKey.split(\"/\");\n    segments.pop();\n    const p = [];\n    let expanded = true;\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j]);\n      const k = p.join(\"/\");\n      if (!((_a = state[k]) == null ? void 0 : _a.expanded)) {\n        expanded = false;\n        break;\n      }\n    }\n    if (expanded) {\n      return els[i];\n    }\n  }\n  return null;\n}\nfunction _focusItemElement(el) {\n  if (el.getAttribute(\"role\") === \"treeitem\") {\n    el.focus();\n  }\n  if (el.getAttribute(\"role\") === \"none\") {\n    const firstChild = el.firstChild;\n    if (firstChild && firstChild instanceof HTMLElement) {\n      firstChild.focus();\n    }\n  }\n}\nexport {\n  _findNextItemElement,\n  _findPrevItemElement,\n  _focusItemElement\n};\n"]},"metadata":{},"sourceType":"module"}