{"ast":null,"code":"let id = 0;\nexport class ContentCard {\n  // @ts-ignore\n  constructor(id, name, src, description, checkbox, type, dimension, size) {\n    this.id = void 0;\n    this.name = void 0;\n    this.src = void 0;\n    this.description = void 0;\n    this.checkbox = void 0;\n    this.type = void 0;\n    this.dimension = void 0;\n    this.size = void 0;\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.id = id, this.name = name, this.src = src, this.description = description;\n    this.checkbox = checkbox;\n    this.type = type;\n    this.dimension = dimension;\n    this.size = size;\n  }\n\n}\n\nconst getContentCards = imgArr => imgArr.map(src => new ContentCard(id++, \"some name\", src, \"some description\", false, \"image/png\", \"1280 * 720 px\", \"128 kb\"));\n\nexport default getContentCards;\nexport const findIndex = (id, arrayContentCard) => arrayContentCard.findIndex(contentCard => contentCard.id === id);\nexport const findCard = (id, arrayContentCard) => arrayContentCard.find(card => card.id === id);\nexport const getArrayBlobObjects = arrayFiles => arrayFiles.map(file => URL.createObjectURL(file));\nexport const onUploadClick = inputElement => inputElement.current.click();\nexport const handlerUploadDocument = (e, setArrayContentCard, typeArrayContentCard) => {\n  var _e$target, _e$target$files;\n\n  const arrayFiles = (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$files = _e$target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) ? typeArrayContentCard === \"single\" ? [e.target.files[0]] : Array.from(e.target.files) : [];\n  const files = getArrayBlobObjects(arrayFiles);\n  setArrayContentCard(getContentCards(files));\n};\nexport const setValueCheckBox = (idCard, arrayContentCard, setArrayContentCard, statusHeaderForList, statusCommonCheckBox) => setArrayContentCard(arrayContentCard.map(contentCard => statusHeaderForList ? { ...contentCard,\n  checkbox: !statusCommonCheckBox\n} : contentCard.id === idCard ? { ...contentCard,\n  checkbox: !contentCard.checkbox\n} : contentCard));\nexport const removeImgFromGallery = (arrayContentCard, setArrayContentCard, id) => setArrayContentCard(arrayContentCard.filter(contentCard => id === \"checkBox\" ? !contentCard.checkbox : contentCard.id !== id));\nexport const handlerOnClickCheckBox = (statusHeaderForList, setStatusCommonCheckBox, statusCommonCheckBox, idCard, arrayContentCard, setArrayContentCard) => {\n  if (statusHeaderForList) {\n    setStatusCommonCheckBox(!statusCommonCheckBox);\n  }\n\n  setValueCheckBox(idCard, arrayContentCard, setArrayContentCard, statusHeaderForList, statusCommonCheckBox);\n};\nexport const handlerSetStatusDragAndDrop = (e, value, setStatusDragAndDrop) => {\n  e.stopPropagation();\n\n  if (setStatusDragAndDrop) {\n    setStatusDragAndDrop(value);\n  }\n};","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/src/services/functions/img.ts"],"names":["id","ContentCard","constructor","name","src","description","checkbox","type","dimension","size","getContentCards","imgArr","map","findIndex","arrayContentCard","contentCard","findCard","find","card","getArrayBlobObjects","arrayFiles","file","URL","createObjectURL","onUploadClick","inputElement","current","click","handlerUploadDocument","e","setArrayContentCard","typeArrayContentCard","target","files","Array","from","setValueCheckBox","idCard","statusHeaderForList","statusCommonCheckBox","removeImgFromGallery","filter","handlerOnClickCheckBox","setStatusCommonCheckBox","handlerSetStatusDragAndDrop","value","setStatusDragAndDrop","stopPropagation"],"mappings":"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","sourcesContent":["import { InterfaceContentCard, Dispatch } from \"../interfacesAndTypes/common\"\nimport React from \"react\"\n\nlet id = 0\n\nexport class ContentCard implements InterfaceContentCard {\n  id: number | string;\n  name: string;\n  src: string;\n  description: string;\n  checkbox: boolean;\n  type: string;\n  dimension: string;\n  size: string;\n  // @ts-ignore\n  constructor(id, name, src, description, checkbox, type, dimension, size) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.id = id,\n      this.name = name,\n      this.src = src,\n      this.description = description\n    this.checkbox = checkbox\n    this.type = type\n    this.dimension = dimension\n    this.size = size\n  }\n}\n\nconst getContentCards = (imgArr: string[]) =>\n  imgArr.map((src: string) => new ContentCard(id++, \"some name\", src, \"some description\",\n    false, \"image/png\", \"1280 * 720 px\", \"128 kb\"))\n\nexport default getContentCards\n\nexport const findIndex = (id: string | number, arrayContentCard: InterfaceContentCard[]) =>\n  arrayContentCard.findIndex(contentCard=>contentCard.id === id)\n\nexport const findCard = (id: string | number, arrayContentCard: InterfaceContentCard[]) =>\n  arrayContentCard.find((card: InterfaceContentCard)=> card.id === id)\n\nexport const getArrayBlobObjects = (arrayFiles:  File[]) => arrayFiles.map((file: {}) => URL.createObjectURL(file))\n\nexport const onUploadClick = (inputElement: React.MutableRefObject<HTMLInputElement>) => inputElement.current.click()\n\nexport const handlerUploadDocument = (e: React.ChangeEvent<HTMLInputElement>,\n                                      setArrayContentCard: Dispatch<InterfaceContentCard[]>, typeArrayContentCard?: string) => {\n\n  const arrayFiles = e?.target?.files?.[0]\n    ? typeArrayContentCard === \"single\"\n      ? [e.target.files[0]]\n      : Array.from(e.target.files)\n    : []\n  const files = getArrayBlobObjects(arrayFiles)\n  setArrayContentCard(getContentCards(files))\n}\n\nexport const setValueCheckBox = (idCard: number | string, arrayContentCard: InterfaceContentCard[],\n                                 setArrayContentCard: Dispatch<InterfaceContentCard[]>, statusHeaderForList: boolean, statusCommonCheckBox: boolean) =>\n  setArrayContentCard(arrayContentCard.map((contentCard: InterfaceContentCard) =>\n    statusHeaderForList? {...contentCard, checkbox: !statusCommonCheckBox}\n      :contentCard.id === idCard\n        ? {...contentCard, checkbox: !contentCard.checkbox}\n        :contentCard\n  ))\n\nexport const removeImgFromGallery = (arrayContentCard: InterfaceContentCard[],\n                                     setArrayContentCard: Dispatch<InterfaceContentCard[]>, id: string | number | null) =>\n  setArrayContentCard(arrayContentCard.filter(contentCard => id === \"checkBox\"\n    ? !contentCard.checkbox: contentCard.id !== id))\n\nexport const handlerOnClickCheckBox = (statusHeaderForList: boolean, setStatusCommonCheckBox: Dispatch<boolean>,\n                                       statusCommonCheckBox: boolean, idCard: number | string, arrayContentCard: InterfaceContentCard[],\n                                       setArrayContentCard: Dispatch<InterfaceContentCard[]>) => {\n  if (statusHeaderForList) {\n    setStatusCommonCheckBox(!statusCommonCheckBox)\n  }\n  setValueCheckBox(idCard, arrayContentCard, setArrayContentCard, statusHeaderForList, statusCommonCheckBox)\n}\n\nexport const handlerSetStatusDragAndDrop = (e: React.MouseEvent<HTMLImageElement | HTMLDivElement>, value: boolean,\n                                            setStatusDragAndDrop: Dispatch<boolean>) => {\n  e.stopPropagation()\n  if (setStatusDragAndDrop) {\n    setStatusDragAndDrop(value)\n  }\n}"]},"metadata":{},"sourceType":"module"}