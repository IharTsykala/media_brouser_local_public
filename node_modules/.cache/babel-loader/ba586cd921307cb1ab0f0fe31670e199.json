{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nimport maxSizeModifier from \"popper-max-size-modifier\";\n\nfunction getPopoverModifiers(props) {\n  const {\n    allowedAutoPlacements,\n    arrow,\n    arrowElement,\n    boundaryElement,\n    constrainSize,\n    distance,\n    fallbackPlacements,\n    margins,\n    matchReferenceWidth,\n    open,\n    preventOverflow,\n    skidding,\n    tether,\n    tetherOffset\n  } = props;\n\n  if (!open) {\n    return [];\n  }\n\n  const detectOverflowOptions = {\n    altAxis: !constrainSize,\n    boundary: boundaryElement || void 0,\n    padding: 8,\n    tether,\n    tetherOffset\n  };\n  return [constrainSize && __spreadProps(__spreadValues({}, maxSizeModifier), {\n    options: detectOverflowOptions\n  }), constrainSize && {\n    name: \"applyMaxSize\",\n    enabled: true,\n    phase: \"beforeWrite\",\n    requires: [\"maxSize\"],\n\n    fn({\n      state\n    }) {\n      const {\n        width,\n        height\n      } = state.modifiersData.maxSize;\n      state.styles.popper = __spreadProps(__spreadValues({}, state.styles.popper), {\n        maxWidth: `${width}px`,\n        maxHeight: `${height}px`\n      });\n    }\n\n  }, arrow && {\n    name: \"arrow\",\n    options: {\n      element: arrowElement,\n      padding: 4\n    }\n  }, (constrainSize || preventOverflow) && {\n    name: \"preventOverflow\",\n    options: detectOverflowOptions\n  }, {\n    name: \"offset\",\n    options: {\n      offset: [skidding, distance]\n    }\n  }, margins && {\n    name: \"margins\",\n    enabled: true,\n    phase: \"beforeRead\",\n    fn: ({\n      state\n    }) => {\n      const {\n        rects\n      } = state;\n\n      if (rects.reference) {\n        rects.reference.x += margins[3];\n        rects.reference.y += margins[1];\n        rects.reference.width -= margins[1] + margins[3];\n        rects.reference.height -= margins[0] + margins[2];\n      }\n    }\n  }, {\n    name: \"flip\",\n    options: {\n      allowedAutoPlacements,\n      boundary: boundaryElement || void 0,\n      fallbackPlacements,\n      padding: 8\n    }\n  }, matchReferenceWidth && {\n    name: \"matchWidth\",\n    enabled: true,\n    phase: \"beforeWrite\",\n    requires: [\"computeStyles\"],\n\n    fn({\n      state\n    }) {\n      const {\n        width\n      } = state.rects.reference;\n      state.styles.popper.width = `${width}px`;\n    },\n\n    effect: ({\n      state\n    }) => {\n      const refElement = state.elements.reference;\n\n      if (refElement instanceof HTMLElement) {\n        state.elements.popper.style.width = `${refElement.offsetWidth - (margins ? margins[1] + margins[3] : 0)}px`;\n      }\n    }\n  }].filter(Boolean);\n}\n\nexport { getPopoverModifiers };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/primitives/popover/modifiers/getPopoverModifiers.js"],"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","maxSizeModifier","getPopoverModifiers","props","allowedAutoPlacements","arrow","arrowElement","boundaryElement","constrainSize","distance","fallbackPlacements","margins","matchReferenceWidth","open","preventOverflow","skidding","tether","tetherOffset","detectOverflowOptions","altAxis","boundary","padding","options","name","enabled","phase","requires","fn","state","width","height","modifiersData","maxSize","styles","popper","maxWidth","maxHeight","element","offset","rects","reference","x","y","effect","refElement","elements","HTMLElement","style","offsetWidth","filter","Boolean"],"mappings":"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","sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport maxSizeModifier from \"popper-max-size-modifier\";\nfunction getPopoverModifiers(props) {\n  const {\n    allowedAutoPlacements,\n    arrow,\n    arrowElement,\n    boundaryElement,\n    constrainSize,\n    distance,\n    fallbackPlacements,\n    margins,\n    matchReferenceWidth,\n    open,\n    preventOverflow,\n    skidding,\n    tether,\n    tetherOffset\n  } = props;\n  if (!open) {\n    return [];\n  }\n  const detectOverflowOptions = {\n    altAxis: !constrainSize,\n    boundary: boundaryElement || void 0,\n    padding: 8,\n    tether,\n    tetherOffset\n  };\n  return [\n    constrainSize && __spreadProps(__spreadValues({}, maxSizeModifier), {\n      options: detectOverflowOptions\n    }),\n    constrainSize && {\n      name: \"applyMaxSize\",\n      enabled: true,\n      phase: \"beforeWrite\",\n      requires: [\"maxSize\"],\n      fn({ state }) {\n        const { width, height } = state.modifiersData.maxSize;\n        state.styles.popper = __spreadProps(__spreadValues({}, state.styles.popper), {\n          maxWidth: `${width}px`,\n          maxHeight: `${height}px`\n        });\n      }\n    },\n    arrow && {\n      name: \"arrow\",\n      options: {\n        element: arrowElement,\n        padding: 4\n      }\n    },\n    (constrainSize || preventOverflow) && {\n      name: \"preventOverflow\",\n      options: detectOverflowOptions\n    },\n    {\n      name: \"offset\",\n      options: {\n        offset: [skidding, distance]\n      }\n    },\n    margins && {\n      name: \"margins\",\n      enabled: true,\n      phase: \"beforeRead\",\n      fn: ({ state }) => {\n        const { rects } = state;\n        if (rects.reference) {\n          rects.reference.x += margins[3];\n          rects.reference.y += margins[1];\n          rects.reference.width -= margins[1] + margins[3];\n          rects.reference.height -= margins[0] + margins[2];\n        }\n      }\n    },\n    {\n      name: \"flip\",\n      options: {\n        allowedAutoPlacements,\n        boundary: boundaryElement || void 0,\n        fallbackPlacements,\n        padding: 8\n      }\n    },\n    matchReferenceWidth && {\n      name: \"matchWidth\",\n      enabled: true,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn({ state }) {\n        const { width } = state.rects.reference;\n        state.styles.popper.width = `${width}px`;\n      },\n      effect: ({ state }) => {\n        const refElement = state.elements.reference;\n        if (refElement instanceof HTMLElement) {\n          state.elements.popper.style.width = `${refElement.offsetWidth - (margins ? margins[1] + margins[3] : 0)}px`;\n        }\n      }\n    }\n  ].filter(Boolean);\n}\nexport {\n  getPopoverModifiers\n};\n"]},"metadata":{},"sourceType":"module"}