{"ast":null,"code":"import { css } from \"styled-components\";\nimport { focusRingBorderStyle, focusRingStyle } from \"../focusRing\";\nimport { getResponsiveProp, rem, responsive } from \"../helpers\";\nconst ROOT_STYLE = css`\n  &:not([hidden]) {\n    display: flex;\n  }\n`;\n\nfunction textInputRootStyle() {\n  return ROOT_STYLE;\n}\n\nfunction textInputBaseStyle(props) {\n  const {\n    theme,\n    $weight\n  } = props;\n  const font = theme.sanity.fonts.text;\n  const color = theme.sanity.color.input;\n  return css`\n    --input-fg-color: ${color.default.enabled.fg};\n    --input-placeholder-color: ${color.default.enabled.placeholder};\n\n    appearance: none;\n    background: none;\n    border: 0;\n    border-radius: 0;\n    outline: none;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: ${font.family};\n    font-weight: ${$weight && font.weights[$weight] || font.weights.regular};\n    margin: 0;\n    position: relative;\n    z-index: 1;\n    display: block;\n    color: var(--input-fg-color);\n\n    /* NOTE: This is a hack to disable Chromeâ€™s autofill styles */\n    &:-webkit-autofill,\n    &:-webkit-autofill:hover,\n    &:-webkit-autofill:focus,\n    &:-webkit-autofill:active {\n      -webkit-text-fill-color: var(--input-fg-color) !important;\n      transition: background-color 5000s;\n      transition-delay: 86400s /* 24h */;\n    }\n\n    &::placeholder {\n      color: var(--input-placeholder-color);\n    }\n\n    /* &:is(textarea) */\n    &[data-as='textarea'] {\n      resize: none;\n    }\n\n    /* enabled */\n    &:not(:invalid):not(:disabled):not(:read-only) {\n      --input-fg-color: ${color.default.enabled.fg};\n      --input-placeholder-color: ${color.default.enabled.placeholder};\n    }\n\n    /* disabled */\n    &:not(:invalid):disabled {\n      --input-fg-color: ${color.default.disabled.fg};\n      --input-placeholder-color: ${color.default.disabled.placeholder};\n    }\n\n    /* invalid */\n    &:invalid {\n      --input-fg-color: ${color.invalid.enabled.fg};\n      --input-placeholder-color: ${color.invalid.enabled.placeholder};\n    }\n\n    /* readOnly */\n    &:read-only {\n      --input-fg-color: ${color.default.readOnly.fg};\n      --input-placeholder-color: ${color.default.readOnly.placeholder};\n    }\n  `;\n}\n\nfunction textInputFontSizeStyle(props) {\n  const {\n    theme\n  } = props;\n  const {\n    fonts,\n    media\n  } = theme.sanity;\n  return responsive(media, getResponsiveProp(props.$fontSize, [2]), sizeIndex => {\n    const size = fonts.text.sizes[sizeIndex] || fonts.text.sizes[2];\n    return {\n      fontSize: rem(size.fontSize),\n      lineHeight: size.lineHeight / size.fontSize\n    };\n  });\n}\n\nfunction textInputRepresentationStyle(props) {\n  const {\n    $border,\n    $hasPrefix,\n    $hasSuffix,\n    theme\n  } = props;\n  const {\n    focusRing,\n    input\n  } = theme.sanity;\n  const color = theme.sanity.color.input;\n  return css`\n    --card-bg-color: ${color.default.enabled.bg};\n    --card-fg-color: ${color.default.enabled.fg};\n    --input-box-shadow: none;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    pointer-events: none;\n    z-index: 0;\n    background-color: var(--card-bg-color);\n    box-shadow: var(--input-box-shadow);\n\n    border-top-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-bottom-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-top-right-radius: ${$hasSuffix ? 0 : void 0};\n    border-bottom-right-radius: ${$hasSuffix ? 0 : void 0};\n\n    /* enabled */\n    *:not(:disabled) + && {\n      --input-box-shadow: ${$border ? focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  }) : void 0};\n    }\n\n    /* invalid */\n    *:not(:disabled):invalid + && {\n      --card-bg-color: ${color.invalid.enabled.bg};\n      --card-fg-color: ${color.invalid.enabled.fg};\n      --input-box-shadow: ${$border ? focusRingBorderStyle({\n    color: color.invalid.enabled.border,\n    width: input.border.width\n  }) : \"none\"};\n    }\n\n    /* focused */\n    *:not(:disabled):focus + && {\n      --input-box-shadow: ${focusRingStyle({\n    border: $border ? {\n      color: color.default.enabled.border,\n      width: input.border.width\n    } : void 0,\n    focusRing\n  })};\n    }\n\n    /* disabled */\n    *:disabled + && {\n      --card-bg-color: ${color.default.disabled.bg};\n      --card-fg-color: ${color.default.disabled.fg};\n      --input-box-shadow: ${$border ? focusRingBorderStyle({\n    color: color.default.disabled.border,\n    width: input.border.width\n  }) : \"none\"};\n    }\n\n    /* hovered */\n    @media (hover: hover) {\n      *:not(:disabled):not(:read-only):not(:invalid):hover + && {\n        --card-bg-color: ${color.default.hovered.bg};\n        --card-fg-color: ${color.default.hovered.fg};\n      }\n\n      *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + && {\n        --input-box-shadow: ${$border ? focusRingBorderStyle({\n    color: color.default.hovered.border,\n    width: input.border.width\n  }) : \"none\"};\n      }\n    }\n\n    /* readOnly */\n    *:read-only + && {\n      --card-bg-color: ${color.default.readOnly.bg};\n      --card-fg-color: ${color.default.readOnly.fg};\n    }\n  `;\n}\n\nexport { textInputBaseStyle, textInputFontSizeStyle, textInputRepresentationStyle, textInputRootStyle };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/styles/input/textInputStyle.js"],"names":["css","focusRingBorderStyle","focusRingStyle","getResponsiveProp","rem","responsive","ROOT_STYLE","textInputRootStyle","textInputBaseStyle","props","theme","$weight","font","sanity","fonts","text","color","input","default","enabled","fg","placeholder","family","weights","regular","disabled","invalid","readOnly","textInputFontSizeStyle","media","$fontSize","sizeIndex","size","sizes","fontSize","lineHeight","textInputRepresentationStyle","$border","$hasPrefix","$hasSuffix","focusRing","bg","border","width","hovered"],"mappings":"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","sourcesContent":["import { css } from \"styled-components\";\nimport { focusRingBorderStyle, focusRingStyle } from \"../focusRing\";\nimport { getResponsiveProp, rem, responsive } from \"../helpers\";\nconst ROOT_STYLE = css`\n  &:not([hidden]) {\n    display: flex;\n  }\n`;\nfunction textInputRootStyle() {\n  return ROOT_STYLE;\n}\nfunction textInputBaseStyle(props) {\n  const { theme, $weight } = props;\n  const font = theme.sanity.fonts.text;\n  const color = theme.sanity.color.input;\n  return css`\n    --input-fg-color: ${color.default.enabled.fg};\n    --input-placeholder-color: ${color.default.enabled.placeholder};\n\n    appearance: none;\n    background: none;\n    border: 0;\n    border-radius: 0;\n    outline: none;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: ${font.family};\n    font-weight: ${$weight && font.weights[$weight] || font.weights.regular};\n    margin: 0;\n    position: relative;\n    z-index: 1;\n    display: block;\n    color: var(--input-fg-color);\n\n    /* NOTE: This is a hack to disable Chromeâ€™s autofill styles */\n    &:-webkit-autofill,\n    &:-webkit-autofill:hover,\n    &:-webkit-autofill:focus,\n    &:-webkit-autofill:active {\n      -webkit-text-fill-color: var(--input-fg-color) !important;\n      transition: background-color 5000s;\n      transition-delay: 86400s /* 24h */;\n    }\n\n    &::placeholder {\n      color: var(--input-placeholder-color);\n    }\n\n    /* &:is(textarea) */\n    &[data-as='textarea'] {\n      resize: none;\n    }\n\n    /* enabled */\n    &:not(:invalid):not(:disabled):not(:read-only) {\n      --input-fg-color: ${color.default.enabled.fg};\n      --input-placeholder-color: ${color.default.enabled.placeholder};\n    }\n\n    /* disabled */\n    &:not(:invalid):disabled {\n      --input-fg-color: ${color.default.disabled.fg};\n      --input-placeholder-color: ${color.default.disabled.placeholder};\n    }\n\n    /* invalid */\n    &:invalid {\n      --input-fg-color: ${color.invalid.enabled.fg};\n      --input-placeholder-color: ${color.invalid.enabled.placeholder};\n    }\n\n    /* readOnly */\n    &:read-only {\n      --input-fg-color: ${color.default.readOnly.fg};\n      --input-placeholder-color: ${color.default.readOnly.placeholder};\n    }\n  `;\n}\nfunction textInputFontSizeStyle(props) {\n  const { theme } = props;\n  const { fonts, media } = theme.sanity;\n  return responsive(media, getResponsiveProp(props.$fontSize, [2]), (sizeIndex) => {\n    const size = fonts.text.sizes[sizeIndex] || fonts.text.sizes[2];\n    return {\n      fontSize: rem(size.fontSize),\n      lineHeight: size.lineHeight / size.fontSize\n    };\n  });\n}\nfunction textInputRepresentationStyle(props) {\n  const { $border, $hasPrefix, $hasSuffix, theme } = props;\n  const { focusRing, input } = theme.sanity;\n  const color = theme.sanity.color.input;\n  return css`\n    --card-bg-color: ${color.default.enabled.bg};\n    --card-fg-color: ${color.default.enabled.fg};\n    --input-box-shadow: none;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    pointer-events: none;\n    z-index: 0;\n    background-color: var(--card-bg-color);\n    box-shadow: var(--input-box-shadow);\n\n    border-top-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-bottom-left-radius: ${$hasPrefix ? 0 : void 0};\n    border-top-right-radius: ${$hasSuffix ? 0 : void 0};\n    border-bottom-right-radius: ${$hasSuffix ? 0 : void 0};\n\n    /* enabled */\n    *:not(:disabled) + && {\n      --input-box-shadow: ${$border ? focusRingBorderStyle({ color: color.default.enabled.border, width: input.border.width }) : void 0};\n    }\n\n    /* invalid */\n    *:not(:disabled):invalid + && {\n      --card-bg-color: ${color.invalid.enabled.bg};\n      --card-fg-color: ${color.invalid.enabled.fg};\n      --input-box-shadow: ${$border ? focusRingBorderStyle({ color: color.invalid.enabled.border, width: input.border.width }) : \"none\"};\n    }\n\n    /* focused */\n    *:not(:disabled):focus + && {\n      --input-box-shadow: ${focusRingStyle({\n    border: $border ? { color: color.default.enabled.border, width: input.border.width } : void 0,\n    focusRing\n  })};\n    }\n\n    /* disabled */\n    *:disabled + && {\n      --card-bg-color: ${color.default.disabled.bg};\n      --card-fg-color: ${color.default.disabled.fg};\n      --input-box-shadow: ${$border ? focusRingBorderStyle({\n    color: color.default.disabled.border,\n    width: input.border.width\n  }) : \"none\"};\n    }\n\n    /* hovered */\n    @media (hover: hover) {\n      *:not(:disabled):not(:read-only):not(:invalid):hover + && {\n        --card-bg-color: ${color.default.hovered.bg};\n        --card-fg-color: ${color.default.hovered.fg};\n      }\n\n      *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + && {\n        --input-box-shadow: ${$border ? focusRingBorderStyle({\n    color: color.default.hovered.border,\n    width: input.border.width\n  }) : \"none\"};\n      }\n    }\n\n    /* readOnly */\n    *:read-only + && {\n      --card-bg-color: ${color.default.readOnly.bg};\n      --card-fg-color: ${color.default.readOnly.fg};\n    }\n  `;\n}\nexport {\n  textInputBaseStyle,\n  textInputFontSizeStyle,\n  textInputRepresentationStyle,\n  textInputRootStyle\n};\n"]},"metadata":{},"sourceType":"module"}