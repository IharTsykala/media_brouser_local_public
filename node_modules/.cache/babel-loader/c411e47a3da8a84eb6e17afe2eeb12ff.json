{"ast":null,"code":"const axios = require(\"axios\");\n\nconst host = process.env.REACT_APP_HOST || \"https://api.vimeo.com\";\nconst userId = \"151396534\";\nconst accessToken = \"44c2627337c4ddb92f55eccd42e82229\";\nconst clientIdentifier = \"ad8e3f1947b97a05ec3e6c40ff2daee1c367901c\";\nexport default class videoService {}\n\nvideoService.getRedirectToAllowPageService = async () => {\n  window.location.href = `${host}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=http://localhost:3000/&state=\"helloUser\"&scope=private`;\n};\n\nvideoService.getRedirectToVideoPageService = async (code, state) => {\n  const newAccessToken = await axios.post(`${host}/oauth/access_token`, {\n    \"grant_type\": \"client_credentials\",\n    \"scope\": \"private purchased create edit delete interact upload promo_codes video_files scim public\"\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `bearer ${accessToken}`,\n      'Accept': 'application/vnd.vimeo.*+json;version=3.4'\n    }\n  });\n};\n\nvideoService.getNewAccessTokenService = async uriVideo => {\n  // const newAccessToken = await axios.post(\n  //   `${host}/oauth/authorize/client`,\n  //   {\n  //     \"grant_type\": \"client_credentials\",\n  //     \"scope\": \"private purchased create edit delete interact upload promo_codes video_files scim public\"\n  //   },\n  //   {\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Authorization': `bearer ${accessToken}`,\n  //       'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n  //     },\n  //   }\n  // )\n  // console.log(1, newAccessToken.data)\n  // console.log(2, uriVideo)\n  window.location.href = `${host}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=http://localhost:3000/&state=\"helloUser\"&scope=private`; // const redirectUser = await axios.get(\n  //   `${host}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=${uriVideo}&state=\"helloUser\"&scope=${newAccessToken.data.scope}`,\n  //   {\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       // 'Authorization': `bearer ${accessToken}`,\n  //       'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n  //     },\n  //   }\n  // )\n  //\n  // console.log(redirectUser)\n  // return newAccessToken.data\n};\n\nvideoService.getArrayVideoService = async () => {\n  const response = await axios.get(`${host}/users/${userId}/videos`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `bearer ${accessToken}`,\n      'Accept': 'application/vnd.vimeo.*+json;version=3.4'\n    }\n  });\n  console.log(response);\n  return response.data;\n};\n\nvideoService.removeCardByIdService = async (id, newAccessToken) => {\n  const responseRemove = await axios.delete(`${host}${id}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `bearer ${newAccessToken}`,\n      'Accept': 'application/vnd.vimeo.*+json;version=3.4'\n    }\n  });\n  console.log(responseRemove); // return response.data\n};\n\nvideoService.editCardByIdService = async (id, newAccessToken) => {\n  const response = await axios.patch(`${host}${id}`, {}, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `bearer ${newAccessToken}`,\n      'Accept': 'application/vnd.vimeo.*+json;version=3.4'\n    }\n  });\n  console.log(response);\n  return response.data;\n};","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/src/services/api/videoService.ts"],"names":["axios","require","host","process","env","REACT_APP_HOST","userId","accessToken","clientIdentifier","videoService","getRedirectToAllowPageService","window","location","href","getRedirectToVideoPageService","code","state","newAccessToken","post","headers","getNewAccessTokenService","uriVideo","getArrayVideoService","response","get","console","log","data","removeCardByIdService","id","responseRemove","delete","editCardByIdService","patch"],"mappings":"AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,cAAZ,IAA8B,uBAA3C;AAEA,MAAMC,MAAM,GAAG,WAAf;AACA,MAAMC,WAAW,GAAG,kCAApB;AACA,MAAMC,gBAAgB,GAAG,0CAAzB;AAEA,eAAe,MAAMC,YAAN,CAAmB;;AAAbA,Y,CAEZC,6B,GAAgC,YAAY;AACjDC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,GAAEX,IAAK,iDAAgDM,gBAAiB,sEAAhG;AACD,C;;AAJkBC,Y,CAMZK,6B,GAAgC,OAAOC,IAAP,EAAqBC,KAArB,KAAuC;AAC5E,QAAMC,cAAc,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAC1B,GAAEhB,IAAK,qBADmB,EAE3B;AACE,kBAAc,oBADhB;AAEE,aAAS;AAFX,GAF2B,EAM3B;AACEiB,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASZ,WAAY,EAFhC;AAGP,gBAAU;AAHH;AADX,GAN2B,CAA7B;AAcD,C;;AArBkBE,Y,CAuBZW,wB,GAA2B,MAAOC,QAAP,IAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,GAAEX,IAAK,iDAAgDM,gBAAiB,sEAAhG,CAjB4D,CAkB5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,C;;AAtDkBC,Y,CAwDVa,oB,GAAuB,YAAY;AACxC,QAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CACpB,GAAEtB,IAAK,UAASI,MAAO,SADH,EAErB;AACEa,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASZ,WAAY,EAFhC;AAGP,gBAAU;AAHH;AADX,GAFqB,CAAvB;AAUAkB,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,SAAOA,QAAQ,CAACI,IAAhB;AACD,C;;AArEgBlB,Y,CAuEVmB,qB,GAAwB,OAAOC,EAAP,EAA4BZ,cAA5B,KAAuD;AAEpF,QAAMa,cAAc,GAAG,MAAM9B,KAAK,CAAC+B,MAAN,CAC1B,GAAE7B,IAAK,GAAE2B,EAAG,EADc,EAE3B;AACEV,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASF,cAAe,EAFnC;AAGP,gBAAU;AAHH;AADX,GAF2B,CAA7B;AAUAQ,EAAAA,OAAO,CAACC,GAAR,CAAYI,cAAZ,EAZoF,CAapF;AACD,C;;AArFgBrB,Y,CAuFRuB,mB,GAAsB,OAAOH,EAAP,EAA4BZ,cAA5B,KAAuD;AAClF,QAAMM,QAAQ,GAAG,MAAMvB,KAAK,CAACiC,KAAN,CACpB,GAAE/B,IAAK,GAAE2B,EAAG,EADQ,EAErB,EAFqB,EAGrB;AACEV,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASF,cAAe,EAFnC;AAGP,gBAAU;AAHH;AADX,GAHqB,CAAvB;AAWAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,SAAOA,QAAQ,CAACI,IAAhB;AACD,C","sourcesContent":["import { removeCardById } from \"../../Redux/store/video/video.actions\"\n\nconst axios = require(\"axios\")\nconst host = process.env.REACT_APP_HOST || \"https://api.vimeo.com\"\n\nconst userId = \"151396534\"\nconst accessToken = \"44c2627337c4ddb92f55eccd42e82229\"\nconst clientIdentifier = \"ad8e3f1947b97a05ec3e6c40ff2daee1c367901c\"\n\nexport default class videoService {\n\n  static getRedirectToAllowPageService = async () => {\n    window.location.href = `${host}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=http://localhost:3000/&state=\"helloUser\"&scope=private`;\n  }\n\n  static getRedirectToVideoPageService = async (code: string, state: string) => {\n    const newAccessToken = await axios.post(\n      `${host}/oauth/access_token`,\n      {\n        \"grant_type\": \"client_credentials\",\n        \"scope\": \"private purchased create edit delete interact upload promo_codes video_files scim public\"\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `bearer ${accessToken}`,\n          'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n        },\n      }\n    )\n  }\n\n  static getNewAccessTokenService = async (uriVideo: string) => {\n    // const newAccessToken = await axios.post(\n    //   `${host}/oauth/authorize/client`,\n    //   {\n    //     \"grant_type\": \"client_credentials\",\n    //     \"scope\": \"private purchased create edit delete interact upload promo_codes video_files scim public\"\n    //   },\n    //   {\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       'Authorization': `bearer ${accessToken}`,\n    //       'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n    //     },\n    //   }\n    // )\n    // console.log(1, newAccessToken.data)\n    // console.log(2, uriVideo)\n    window.location.href = `${host}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=http://localhost:3000/&state=\"helloUser\"&scope=private`;\n    // const redirectUser = await axios.get(\n    //   `${host}/oauth/authorize?response_type=code&client_id=${clientIdentifier}&redirect_uri=${uriVideo}&state=\"helloUser\"&scope=${newAccessToken.data.scope}`,\n    //   {\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       // 'Authorization': `bearer ${accessToken}`,\n    //       'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n    //     },\n    //   }\n    // )\n    //\n    // console.log(redirectUser)\n    // return newAccessToken.data\n  }\n\n    static getArrayVideoService = async () => {\n      const response = await axios.get(\n        `${host}/users/${userId}/videos`,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `bearer ${accessToken}`,\n            'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n          },\n        }\n      )\n      console.log(response)\n      return response.data\n    }\n\n    static removeCardByIdService = async (id: string | number, newAccessToken: string) => {\n\n      const responseRemove = await axios.delete(\n        `${host}${id}`,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `bearer ${newAccessToken}`,\n            'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n          },\n        }\n      )\n      console.log(responseRemove)\n      // return response.data\n    }\n\n      static editCardByIdService = async (id: string | number, newAccessToken: string) => {\n        const response = await axios.patch(\n          `${host}${id}`,\n          {},\n          {\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `bearer ${newAccessToken}`,\n              'Accept': 'application/vnd.vimeo.*+json;version=3.4',\n            },\n          }\n        )\n        console.log(response)\n        return response.data\n      }\n}\n"]},"metadata":{},"sourceType":"module"}