{"ast":null,"code":"import _objectSpread from\"/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";var id=0;export var ContentCard=// @ts-ignore\nfunction ContentCard(id,name,src,description,checkbox,type,dimension,size){_classCallCheck(this,ContentCard);this.id=void 0;this.name=void 0;this.src=void 0;this.description=void 0;this.checkbox=void 0;this.type=void 0;this.dimension=void 0;this.size=void 0;// eslint-disable-next-line @typescript-eslint/no-unused-expressions\nthis.id=id,this.name=name,this.src=src,this.description=description;this.checkbox=checkbox;this.type=type;this.dimension=dimension;this.size=size;};var getContentCards=function getContentCards(imgArr){return imgArr.map(function(src){return new ContentCard(id++,\"some name\",src,\"some description\",false,\"image/png\",\"1280 * 720 px\",\"128 kb\");});};export default getContentCards;export var findIndex=function findIndex(id,arrayContentCard){return arrayContentCard.findIndex(function(contentCard){return contentCard.id===id;});};export var findCard=function findCard(id,arrayContentCard){return arrayContentCard.find(function(card){return card.id===id;});};export var getArrayBlobObjects=function getArrayBlobObjects(arrayFiles){return arrayFiles.map(function(file){return URL.createObjectURL(file);});};export var onUploadClick=function onUploadClick(inputElement){return inputElement.current.click();};export var handlerUploadDocument=function handlerUploadDocument(e,setArrayContentCard,typeArrayContentCard){var _e$target,_e$target$files;var arrayFiles=(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:(_e$target$files=_e$target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0])?typeArrayContentCard===\"single\"?[e.target.files[0]]:Array.from(e.target.files):[];var files=getArrayBlobObjects(arrayFiles);setArrayContentCard(getContentCards(files));};export var setValueCheckBox=function setValueCheckBox(idCard,arrayContentCard,setArrayContentCard,statusHeaderForList,statusCommonCheckBox){return setArrayContentCard(arrayContentCard.map(function(contentCard){return statusHeaderForList?_objectSpread(_objectSpread({},contentCard),{},{checkbox:!statusCommonCheckBox}):contentCard.id===idCard?_objectSpread(_objectSpread({},contentCard),{},{checkbox:!contentCard.checkbox}):contentCard;}));};export var removeImgFromGallery=function removeImgFromGallery(arrayContentCard,setArrayContentCard,id){return setArrayContentCard(arrayContentCard.filter(function(contentCard){return id===\"checkBox\"?!contentCard.checkbox:contentCard.id!==id;}));};","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/src/components/ContainerMediaComponent/contentCard.ts"],"names":["id","ContentCard","name","src","description","checkbox","type","dimension","size","getContentCards","imgArr","map","findIndex","arrayContentCard","contentCard","findCard","find","card","getArrayBlobObjects","arrayFiles","file","URL","createObjectURL","onUploadClick","inputElement","current","click","handlerUploadDocument","e","setArrayContentCard","typeArrayContentCard","target","files","Array","from","setValueCheckBox","idCard","statusHeaderForList","statusCommonCheckBox","removeImgFromGallery","filter"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nlet id = 0\n\nexport interface InterfaceContentCard {\n    id: number | string;\n    name: string;\n    src: string;\n    description: string;\n    checkbox: boolean;\n    type: string;\n    dimension: string;\n    size: string;\n}\n\nexport class ContentCard implements InterfaceContentCard {\n    id: number | string;\n    name: string;\n    src: string;\n    description: string;\n    checkbox: boolean;\n    type: string;\n    dimension: string;\n    size: string;\n    // @ts-ignore\n    constructor(id, name, src, description, checkbox, type, dimension, size) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        this.id = id,\n        this.name = name,\n        this.src = src,\n        this.description = description\n        this.checkbox = checkbox\n        this.type = type\n        this.dimension = dimension\n        this.size = size\n    }\n}\n\nconst getContentCards = (imgArr: string[]) =>\n    imgArr.map((src: string) => new ContentCard(id++, \"some name\", src, \"some description\",\n        false, \"image/png\", \"1280 * 720 px\", \"128 kb\"))\n\nexport default getContentCards\n\nexport type Dispatch<A> = (value: A) => void;\n\nexport type  OnDrop = (inputTarget: any[], setArrayContentCard: Dispatch<InterfaceContentCard[]>) => void\n\nexport const findIndex = (id: string | number, arrayContentCard: InterfaceContentCard[]) =>\n    arrayContentCard.findIndex(contentCard=>contentCard.id === id)\n\nexport const findCard = (id: string | number, arrayContentCard: InterfaceContentCard[]) =>\n    arrayContentCard.find((card: InterfaceContentCard)=> card.id === id)\n\nexport const getArrayBlobObjects = (arrayFiles:  File[]) => arrayFiles.map((file: {}) => URL.createObjectURL(file))\n\nexport const onUploadClick = (inputElement: React.MutableRefObject<HTMLInputElement>) => inputElement.current.click()\n\nexport const handlerUploadDocument = (e: React.ChangeEvent<HTMLInputElement>,\n        setArrayContentCard: Dispatch<InterfaceContentCard[]>, typeArrayContentCard?: string) => {\n\n    const arrayFiles = e?.target?.files?.[0]\n        ? typeArrayContentCard === \"single\"\n            ? [e.target.files[0]]\n            : Array.from(e.target.files)\n        : []\n    const files = getArrayBlobObjects(arrayFiles)\n    setArrayContentCard(getContentCards(files))\n}\n\nexport const setValueCheckBox = (idCard: number | string, arrayContentCard: InterfaceContentCard[],\n    setArrayContentCard: Dispatch<InterfaceContentCard[]>, statusHeaderForList: boolean, statusCommonCheckBox: boolean) =>\n        setArrayContentCard(arrayContentCard.map((contentCard: InterfaceContentCard) =>\n            statusHeaderForList? {...contentCard, checkbox: !statusCommonCheckBox}\n                :contentCard.id === idCard\n                ? {...contentCard, checkbox: !contentCard.checkbox}\n            :contentCard\n        ))\n\nexport const removeImgFromGallery = (arrayContentCard: InterfaceContentCard[],\n             setArrayContentCard: Dispatch<InterfaceContentCard[]>, id: string | number | null) =>\n                 setArrayContentCard(arrayContentCard.filter(contentCard => id === \"checkBox\"\n                     ? !contentCard.checkbox: contentCard.id !== id))\n"]},"metadata":{},"sourceType":"module"}