{"ast":null,"code":"import { useEffect, useRef, useState } from \"react\";\nimport { EMPTY_ARRAY } from \"../constants\";\n\nfunction _getElements(element, elementsArg) {\n  const ret = [element];\n\n  for (const el of elementsArg) {\n    if (Array.isArray(el)) {\n      ret.push(...el);\n    } else {\n      ret.push(el);\n    }\n  }\n\n  return ret.filter(Boolean);\n}\n\nfunction useClickOutside(listener, elementsArg = EMPTY_ARRAY, boundaryElement) {\n  const [element, setElement] = useState(null);\n  const [elements, setElements] = useState(() => _getElements(element, elementsArg));\n  const elementsRef = useRef(elements);\n  useEffect(() => {\n    const prevElements = elementsRef.current;\n\n    const nextElements = _getElements(element, elementsArg);\n\n    if (prevElements.length !== nextElements.length) {\n      setElements(nextElements);\n      elementsRef.current = nextElements;\n      return;\n    }\n\n    for (const el of prevElements) {\n      if (!nextElements.includes(el)) {\n        setElements(nextElements);\n        elementsRef.current = nextElements;\n        return;\n      }\n    }\n\n    for (const el of nextElements) {\n      if (!prevElements.includes(el)) {\n        setElements(nextElements);\n        elementsRef.current = nextElements;\n        return;\n      }\n    }\n  }, [element, elementsArg]);\n  useEffect(() => {\n    if (!listener) return void 0;\n\n    const handleWindowMouseDown = evt => {\n      const target = evt.target;\n\n      if (!(target instanceof Node)) {\n        return;\n      }\n\n      if (boundaryElement && !boundaryElement.contains(target)) {\n        return;\n      }\n\n      for (const el of elements) {\n        if (target === el || el.contains(target)) {\n          return;\n        }\n      }\n\n      listener(evt);\n    };\n\n    window.addEventListener(\"mousedown\", handleWindowMouseDown);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleWindowMouseDown);\n    };\n  }, [boundaryElement, listener, elements]);\n  return setElement;\n}\n\nexport { useClickOutside };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/hooks/useClickOutside.js"],"names":["useEffect","useRef","useState","EMPTY_ARRAY","_getElements","element","elementsArg","ret","el","Array","isArray","push","filter","Boolean","useClickOutside","listener","boundaryElement","setElement","elements","setElements","elementsRef","prevElements","current","nextElements","length","includes","handleWindowMouseDown","evt","target","Node","contains","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { EMPTY_ARRAY } from \"../constants\";\nfunction _getElements(element, elementsArg) {\n  const ret = [element];\n  for (const el of elementsArg) {\n    if (Array.isArray(el)) {\n      ret.push(...el);\n    } else {\n      ret.push(el);\n    }\n  }\n  return ret.filter(Boolean);\n}\nfunction useClickOutside(listener, elementsArg = EMPTY_ARRAY, boundaryElement) {\n  const [element, setElement] = useState(null);\n  const [elements, setElements] = useState(() => _getElements(element, elementsArg));\n  const elementsRef = useRef(elements);\n  useEffect(() => {\n    const prevElements = elementsRef.current;\n    const nextElements = _getElements(element, elementsArg);\n    if (prevElements.length !== nextElements.length) {\n      setElements(nextElements);\n      elementsRef.current = nextElements;\n      return;\n    }\n    for (const el of prevElements) {\n      if (!nextElements.includes(el)) {\n        setElements(nextElements);\n        elementsRef.current = nextElements;\n        return;\n      }\n    }\n    for (const el of nextElements) {\n      if (!prevElements.includes(el)) {\n        setElements(nextElements);\n        elementsRef.current = nextElements;\n        return;\n      }\n    }\n  }, [element, elementsArg]);\n  useEffect(() => {\n    if (!listener)\n      return void 0;\n    const handleWindowMouseDown = (evt) => {\n      const target = evt.target;\n      if (!(target instanceof Node)) {\n        return;\n      }\n      if (boundaryElement && !boundaryElement.contains(target)) {\n        return;\n      }\n      for (const el of elements) {\n        if (target === el || el.contains(target)) {\n          return;\n        }\n      }\n      listener(evt);\n    };\n    window.addEventListener(\"mousedown\", handleWindowMouseDown);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleWindowMouseDown);\n    };\n  }, [boundaryElement, listener, elements]);\n  return setElement;\n}\nexport {\n  useClickOutside\n};\n"]},"metadata":{},"sourceType":"module"}