{"ast":null,"code":"import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useMediaIndex, useResponsiveProp } from \"../../hooks\";\nimport { LayerContext } from \"./layerContext\";\n\nfunction LayerProvider(props) {\n  const {\n    children,\n    zOffset: zOffsetProp = 0\n  } = props;\n  const parent = useContext(LayerContext);\n  const zOffset = useResponsiveProp(zOffsetProp);\n  const maxMediaIndex = zOffset.length - 1;\n  const mediaIndex = Math.min(useMediaIndex(), maxMediaIndex);\n  const zIndex = parent ? parent.zIndex + zOffset[mediaIndex] : zOffset[mediaIndex];\n  const [size, setSize] = useState(0);\n  const registerChild = useCallback(() => {\n    setSize(v => v + 1);\n    return () => setSize(v => v - 1);\n  }, []);\n  const parentRegisterChild = parent == null ? void 0 : parent.registerChild;\n  useEffect(() => {\n    if (!parentRegisterChild) return;\n    return parentRegisterChild();\n  }, [parentRegisterChild]);\n  const value = useMemo(() => ({\n    version: 0,\n    isTopLayer: size === 0,\n    registerChild,\n    size,\n    zIndex\n  }), [size, registerChild, zIndex]);\n  return /* @__PURE__ */React.createElement(LayerContext.Provider, {\n    value\n  }, children);\n}\n\nexport { LayerProvider };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/utils/layer/layerProvider.js"],"names":["React","useCallback","useContext","useEffect","useMemo","useState","useMediaIndex","useResponsiveProp","LayerContext","LayerProvider","props","children","zOffset","zOffsetProp","parent","maxMediaIndex","length","mediaIndex","Math","min","zIndex","size","setSize","registerChild","v","parentRegisterChild","value","version","isTopLayer","createElement","Provider"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,SAAzC,EAAoDC,OAApD,EAA6DC,QAA7D,QAA6E,OAA7E;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,aAAjD;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAO,EAAEC,WAAW,GAAG;AAAnC,MAAyCH,KAA/C;AACA,QAAMI,MAAM,GAAGZ,UAAU,CAACM,YAAD,CAAzB;AACA,QAAMI,OAAO,GAAGL,iBAAiB,CAACM,WAAD,CAAjC;AACA,QAAME,aAAa,GAAGH,OAAO,CAACI,MAAR,GAAiB,CAAvC;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASb,aAAa,EAAtB,EAA0BS,aAA1B,CAAnB;AACA,QAAMK,MAAM,GAAGN,MAAM,GAAGA,MAAM,CAACM,MAAP,GAAgBR,OAAO,CAACK,UAAD,CAA1B,GAAyCL,OAAO,CAACK,UAAD,CAArE;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMkB,aAAa,GAAGtB,WAAW,CAAC,MAAM;AACtCqB,IAAAA,OAAO,CAAEE,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAP;AACA,WAAO,MAAMF,OAAO,CAAEE,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAApB;AACD,GAHgC,EAG9B,EAH8B,CAAjC;AAIA,QAAMC,mBAAmB,GAAGX,MAAM,IAAI,IAAV,GAAiB,KAAK,CAAtB,GAA0BA,MAAM,CAACS,aAA7D;AACApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACsB,mBAAL,EACE;AACF,WAAOA,mBAAmB,EAA1B;AACD,GAJQ,EAIN,CAACA,mBAAD,CAJM,CAAT;AAKA,QAAMC,KAAK,GAAGtB,OAAO,CAAC,OAAO;AAAEuB,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,UAAU,EAAEP,IAAI,KAAK,CAAnC;AAAsCE,IAAAA,aAAtC;AAAqDF,IAAAA,IAArD;AAA2DD,IAAAA;AAA3D,GAAP,CAAD,EAA8E,CAACC,IAAD,EAAOE,aAAP,EAAsBH,MAAtB,CAA9E,CAArB;AACA,SAAO,eAAgBpB,KAAK,CAAC6B,aAAN,CAAoBrB,YAAY,CAACsB,QAAjC,EAA2C;AAChEJ,IAAAA;AADgE,GAA3C,EAEpBf,QAFoB,CAAvB;AAGD;;AACD,SACEF,aADF","sourcesContent":["import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useMediaIndex, useResponsiveProp } from \"../../hooks\";\nimport { LayerContext } from \"./layerContext\";\nfunction LayerProvider(props) {\n  const { children, zOffset: zOffsetProp = 0 } = props;\n  const parent = useContext(LayerContext);\n  const zOffset = useResponsiveProp(zOffsetProp);\n  const maxMediaIndex = zOffset.length - 1;\n  const mediaIndex = Math.min(useMediaIndex(), maxMediaIndex);\n  const zIndex = parent ? parent.zIndex + zOffset[mediaIndex] : zOffset[mediaIndex];\n  const [size, setSize] = useState(0);\n  const registerChild = useCallback(() => {\n    setSize((v) => v + 1);\n    return () => setSize((v) => v - 1);\n  }, []);\n  const parentRegisterChild = parent == null ? void 0 : parent.registerChild;\n  useEffect(() => {\n    if (!parentRegisterChild)\n      return;\n    return parentRegisterChild();\n  }, [parentRegisterChild]);\n  const value = useMemo(() => ({ version: 0, isTopLayer: size === 0, registerChild, size, zIndex }), [size, registerChild, zIndex]);\n  return /* @__PURE__ */ React.createElement(LayerContext.Provider, {\n    value\n  }, children);\n}\nexport {\n  LayerProvider\n};\n"]},"metadata":{},"sourceType":"module"}