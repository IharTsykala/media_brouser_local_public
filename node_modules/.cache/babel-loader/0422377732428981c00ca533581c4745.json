{"ast":null,"code":"var _jsxFileName = \"/home/ihartsykala/projects/playy/media_brouser_local_public/src/layouts/LayoutContainerUpload/LayoutContainerUpload.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport update from \"immutability-helper\";\nimport getContentCards, { getArrayBlobObjects } from \"../../services/functions/img\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LayoutContainerUpload = ({\n  children,\n  singleArrayContentCard,\n  galleryArrayContentCard\n}) => {\n  _s();\n\n  // for drag and drop in gallery without upload\n  const moveCard = useCallback((dragIndex, hoverIndex, arrayContentCard, setArrayContentCard) => {\n    const dragCard = arrayContentCard[dragIndex];\n    setArrayContentCard(update(arrayContentCard, {\n      $splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]]\n    }));\n  }, [singleArrayContentCard, galleryArrayContentCard]); // for drag and drop upload\n\n  const handleUploadFileDrop = useCallback((inputTargetFiles, setArrayContentCard) => {\n    if (inputTargetFiles === null || inputTargetFiles === void 0 ? void 0 : inputTargetFiles.length) {\n      const files = getArrayBlobObjects(inputTargetFiles);\n      setArrayContentCard(getContentCards(files));\n    }\n  }, [singleArrayContentCard, galleryArrayContentCard]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LayoutContainerUpload, \"aiMimSvMgwDTAIc1pnipTkIi/J4=\");\n\n_c = LayoutContainerUpload;\nexport default LayoutContainerUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutContainerUpload\");","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/src/layouts/LayoutContainerUpload/LayoutContainerUpload.tsx"],"names":["React","useCallback","DndProvider","HTML5Backend","update","getContentCards","getArrayBlobObjects","LayoutContainerUpload","children","singleArrayContentCard","galleryArrayContentCard","moveCard","dragIndex","hoverIndex","arrayContentCard","setArrayContentCard","dragCard","$splice","handleUploadFileDrop","inputTargetFiles","length","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA2B,WAA3B;AACA,SAASC,YAAT,QAA4B,yBAA5B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,eAAP,IAA0BC,mBAA1B,QAAqD,8BAArD;;;AAUA,MAAMC,qBAAsE,GAAG,CAAC;AAC7EC,EAAAA,QAD6E;AAE9EC,EAAAA,sBAF8E;AAG9EC,EAAAA;AAH8E,CAAD,KAIzE;AAAA;;AAEF;AACA,QAAMC,QAAQ,GAAGV,WAAW,CAC1B,CAACW,SAAD,EAAoBC,UAApB,EACCC,gBADD,EAC2CC,mBAD3C,KACqG;AACnG,UAAMC,QAAQ,GAAGF,gBAAgB,CAACF,SAAD,CAAjC;AAEAG,IAAAA,mBAAmB,CACjBX,MAAM,CAACU,gBAAD,EAAmB;AACvBG,MAAAA,OAAO,EAAE,CACP,CAACL,SAAD,EAAY,CAAZ,CADO,EAEP,CAACC,UAAD,EAAa,CAAb,EAAgBG,QAAhB,CAFO;AADc,KAAnB,CADW,CAAnB;AAQD,GAbyB,EAc1B,CAACP,sBAAD,EAAyBC,uBAAzB,CAd0B,CAA5B,CAHE,CAoBF;;AACA,QAAMQ,oBAAoB,GAAGjB,WAAW,CACtC,CAACkB,gBAAD,EAAmBJ,mBAAnB,KAA6E;AAC3E,QAAII,gBAAJ,aAAIA,gBAAJ,uBAAIA,gBAAgB,CAAEC,MAAtB,EAA8B;AAC5B,YAAMC,KAAK,GAAGf,mBAAmB,CAACa,gBAAD,CAAjC;AACAJ,MAAAA,mBAAmB,CAACV,eAAe,CAACgB,KAAD,CAAhB,CAAnB;AACD;AACF,GANqC,EAOtC,CAACZ,sBAAD,EAAyBC,uBAAzB,CAPsC,CAAxC;AAUA,sBAAQ,QAAC,WAAD;AAAa,IAAA,OAAO,EAAEP,YAAtB;AAAA,cACLK;AADK;AAAA;AAAA;AAAA;AAAA,UAAR;AAGH,CAtCD;;GAAMD,qB;;KAAAA,qB;AAwCN,eAAeA,qBAAf","sourcesContent":["import React, { useCallback } from \"react\"\nimport { DndProvider} from \"react-dnd\"\nimport { HTML5Backend} from \"react-dnd-html5-backend\"\nimport { Dispatch, InterfaceContentCard } from \"../../services/interfacesAndTypes/common\"\nimport update from \"immutability-helper\"\nimport getContentCards, { getArrayBlobObjects } from \"../../services/functions/img\"\nimport { OnDrop } from \"../../services/interfacesAndTypes/img\"\n\ntype LayoutDndProviderProps = {\n  setArrayContentCard: Dispatch<InterfaceContentCard[]>;\n  onDrop: OnDrop,\n  typeArrayContentCard?: string\n}\n\n\nconst LayoutContainerUpload: React.FunctionComponent<LayoutDndProviderProps> = ({\n   children,\n  singleArrayContentCard,\n  galleryArrayContentCard\n}) => {\n\n    // for drag and drop in gallery without upload\n    const moveCard = useCallback(\n      (dragIndex: number, hoverIndex: number,\n       arrayContentCard: InterfaceContentCard[], setArrayContentCard: Dispatch<InterfaceContentCard[]>) => {\n        const dragCard = arrayContentCard[dragIndex]\n\n        setArrayContentCard(\n          update(arrayContentCard, {\n            $splice: [\n              [dragIndex, 1],\n              [hoverIndex, 0, dragCard],\n            ],\n          }),\n        )\n      },\n      [singleArrayContentCard, galleryArrayContentCard],\n    )\n\n    // for drag and drop upload\n    const handleUploadFileDrop = useCallback(\n      (inputTargetFiles, setArrayContentCard: Dispatch<InterfaceContentCard[]>) => {\n        if (inputTargetFiles?.length) {\n          const files = getArrayBlobObjects(inputTargetFiles)\n          setArrayContentCard(getContentCards(files))\n        }\n      },\n      [singleArrayContentCard, galleryArrayContentCard],\n    )\n\n    return  <DndProvider backend={HTML5Backend}>\n      {children}\n    </DndProvider>\n}\n\nexport default LayoutContainerUpload"]},"metadata":{},"sourceType":"module"}