{"ast":null,"code":"import _slicedToArray from \"/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useTheme } from \"../../theme\";\nimport { _getMediaManager } from \"./lib/media\";\n\nfunction useMediaIndex() {\n  var theme = useTheme();\n  var media = theme.sanity.media;\n  var manager = useMemo(function () {\n    return _getMediaManager(media);\n  }, [media]);\n\n  var _useState = useState(manager.getCurrentIndex),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  useEffect(function () {\n    return manager.subscribe(setIndex);\n  }, [manager]);\n  return index;\n}\n\nexport { useMediaIndex };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/hooks/useMediaIndex/useMediaIndex.js"],"names":["useEffect","useMemo","useState","useTheme","_getMediaManager","useMediaIndex","theme","media","sanity","manager","getCurrentIndex","index","setIndex","subscribe"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,aAAjC;;AACA,SAASC,aAAT,GAAyB;AACvB,MAAMC,KAAK,GAAGH,QAAQ,EAAtB;AACA,MAAQI,KAAR,GAAkBD,KAAK,CAACE,MAAxB,CAAQD,KAAR;AACA,MAAME,OAAO,GAAGR,OAAO,CAAC;AAAA,WAAMG,gBAAgB,CAACG,KAAD,CAAtB;AAAA,GAAD,EAAgC,CAACA,KAAD,CAAhC,CAAvB;;AACA,kBAA0BL,QAAQ,CAACO,OAAO,CAACC,eAAT,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACAZ,EAAAA,SAAS,CAAC;AAAA,WAAMS,OAAO,CAACI,SAAR,CAAkBD,QAAlB,CAAN;AAAA,GAAD,EAAoC,CAACH,OAAD,CAApC,CAAT;AACA,SAAOE,KAAP;AACD;;AACD,SACEN,aADF","sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport { useTheme } from \"../../theme\";\nimport { _getMediaManager } from \"./lib/media\";\nfunction useMediaIndex() {\n  const theme = useTheme();\n  const { media } = theme.sanity;\n  const manager = useMemo(() => _getMediaManager(media), [media]);\n  const [index, setIndex] = useState(manager.getCurrentIndex);\n  useEffect(() => manager.subscribe(setIndex), [manager]);\n  return index;\n}\nexport {\n  useMediaIndex\n};\n"]},"metadata":{},"sourceType":"module"}