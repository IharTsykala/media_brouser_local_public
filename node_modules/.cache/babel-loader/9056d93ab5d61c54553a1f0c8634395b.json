{"ast":null,"code":"import _toConsumableArray from \"/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { getResponsiveProp, rem, responsive } from \"../helpers\";\n\nfunction responsiveFont(fontKey, props) {\n  var $size = props.$size,\n      $weight = props.$weight,\n      theme = props.theme;\n  var _theme$sanity = theme.sanity,\n      fonts = _theme$sanity.fonts,\n      media = _theme$sanity.media;\n  var _fonts$fontKey = fonts[fontKey],\n      family = _fonts$fontKey.family,\n      sizes = _fonts$fontKey.sizes,\n      weights = _fonts$fontKey.weights,\n      horizontalOffset = _fonts$fontKey.horizontalOffset;\n  var fontWeight = $weight && weights[$weight] || weights.regular;\n  var defaultSize = sizes[2];\n  var base = {\n    position: \"relative\",\n    fontFamily: family,\n    fontWeight: fontWeight,\n    padding: \"1px\",\n    margin: 0,\n    \"&:before\": {\n      content: '\"\"',\n      display: \"block\",\n      height: 0\n    },\n    \"&:after\": {\n      content: '\"\"',\n      display: \"block\",\n      height: 0\n    },\n    \"& > code, & > span\": {\n      display: \"block\"\n    },\n    \"&:not([hidden])\": {\n      display: \"block\"\n    }\n  };\n  var resp = responsive(media, getResponsiveProp($size), function (sizeIndex) {\n    return fontSize(sizes[sizeIndex] || defaultSize, horizontalOffset);\n  });\n  return [base].concat(_toConsumableArray(resp));\n}\n\nfunction fontSize(size, horizontalOffset) {\n  var ascenderHeight = size.ascenderHeight,\n      descenderHeight = size.descenderHeight,\n      fontSize2 = size.fontSize,\n      iconSize = size.iconSize,\n      letterSpacing = size.letterSpacing,\n      lineHeight = size.lineHeight;\n  var negHeight = ascenderHeight + descenderHeight;\n  var capHeight = lineHeight - negHeight;\n  var iconOffset = (capHeight - iconSize) / 2;\n  return {\n    fontSize: rem(fontSize2),\n    lineHeight: \"calc(\".concat(lineHeight, \" / \").concat(fontSize2, \")\"),\n    letterSpacing: rem(letterSpacing),\n    transform: \"translateY(\".concat(rem(descenderHeight), \")\"),\n    \"&:before\": {\n      marginTop: \"calc(\".concat(rem(0 - negHeight), \" - 1px)\")\n    },\n    \"&:after\": {\n      marginBottom: \"-1px\"\n    },\n    \"& > code, & > span\": {\n      margin: horizontalOffset ? \"0 calc(\".concat(rem(0 - horizontalOffset * fontSize2), \" - 1px)\") : \"0 -1px\"\n    },\n    \"& [data-sanity-icon]\": {\n      fontSize: \"calc(\".concat(iconSize, \" / 16 * 1rem)\"),\n      margin: [rem(iconOffset), horizontalOffset ? \"calc(\".concat(rem(iconOffset), \" + \").concat(rem(horizontalOffset * fontSize2), \")\") : rem(iconOffset)].join(\" \")\n    }\n  };\n}\n\nexport { fontSize, responsiveFont };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/styles/font/responsiveFont.js"],"names":["getResponsiveProp","rem","responsive","responsiveFont","fontKey","props","$size","$weight","theme","sanity","fonts","media","family","sizes","weights","horizontalOffset","fontWeight","regular","defaultSize","base","position","fontFamily","padding","margin","content","display","height","resp","sizeIndex","fontSize","size","ascenderHeight","descenderHeight","fontSize2","iconSize","letterSpacing","lineHeight","negHeight","capHeight","iconOffset","transform","marginTop","marginBottom","join"],"mappings":"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","sourcesContent":["import { getResponsiveProp, rem, responsive } from \"../helpers\";\nfunction responsiveFont(fontKey, props) {\n  const { $size, $weight, theme } = props;\n  const { fonts, media } = theme.sanity;\n  const { family, sizes, weights, horizontalOffset } = fonts[fontKey];\n  const fontWeight = $weight && weights[$weight] || weights.regular;\n  const defaultSize = sizes[2];\n  const base = {\n    position: \"relative\",\n    fontFamily: family,\n    fontWeight,\n    padding: \"1px\",\n    margin: 0,\n    \"&:before\": {\n      content: '\"\"',\n      display: \"block\",\n      height: 0\n    },\n    \"&:after\": {\n      content: '\"\"',\n      display: \"block\",\n      height: 0\n    },\n    \"& > code, & > span\": {\n      display: \"block\"\n    },\n    \"&:not([hidden])\": {\n      display: \"block\"\n    }\n  };\n  const resp = responsive(media, getResponsiveProp($size), (sizeIndex) => fontSize(sizes[sizeIndex] || defaultSize, horizontalOffset));\n  return [base, ...resp];\n}\nfunction fontSize(size, horizontalOffset) {\n  const { ascenderHeight, descenderHeight, fontSize: fontSize2, iconSize, letterSpacing, lineHeight } = size;\n  const negHeight = ascenderHeight + descenderHeight;\n  const capHeight = lineHeight - negHeight;\n  const iconOffset = (capHeight - iconSize) / 2;\n  return {\n    fontSize: rem(fontSize2),\n    lineHeight: `calc(${lineHeight} / ${fontSize2})`,\n    letterSpacing: rem(letterSpacing),\n    transform: `translateY(${rem(descenderHeight)})`,\n    \"&:before\": {\n      marginTop: `calc(${rem(0 - negHeight)} - 1px)`\n    },\n    \"&:after\": {\n      marginBottom: \"-1px\"\n    },\n    \"& > code, & > span\": {\n      margin: horizontalOffset ? `0 calc(${rem(0 - horizontalOffset * fontSize2)} - 1px)` : \"0 -1px\"\n    },\n    \"& [data-sanity-icon]\": {\n      fontSize: `calc(${iconSize} / 16 * 1rem)`,\n      margin: [\n        rem(iconOffset),\n        horizontalOffset ? `calc(${rem(iconOffset)} + ${rem(horizontalOffset * fontSize2)})` : rem(iconOffset)\n      ].join(\" \")\n    }\n  };\n}\nexport {\n  fontSize,\n  responsiveFont\n};\n"]},"metadata":{},"sourceType":"module"}