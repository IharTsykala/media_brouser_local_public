{"ast":null,"code":"import { css } from \"styled-components\";\nimport { rem } from \"../../styles\";\nimport { focusRingBorderStyle, focusRingStyle } from \"../../styles/internal\";\n\nfunction checkboxBaseStyles() {\n  return css`\n    position: relative;\n    display: inline-block;\n  `;\n}\n\nfunction inputElementStyles(props) {\n  const {\n    theme\n  } = props;\n  const color = theme.sanity.color.input;\n  const {\n    focusRing,\n    input,\n    radius\n  } = theme.sanity;\n  return css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n\n    & + span {\n      position: relative;\n      display: block;\n      height: ${rem(input.checkbox.size)};\n      width: ${rem(input.checkbox.size)};\n      box-sizing: border-box;\n      box-shadow: ${focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  })};\n      border-radius: ${rem(radius[2])};\n      line-height: 1;\n      background-color: ${color.default.enabled.bg};\n\n      & > svg {\n        display: block;\n        position: absolute;\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n\n        & > path {\n          vector-effect: non-scaling-stroke;\n          stroke-width: 2 !important;\n        }\n      }\n    }\n\n    &:not(:disabled):focus + span {\n      box-shadow: ${focusRingStyle({\n    border: {\n      width: input.border.width,\n      color: color.default.enabled.border\n    },\n    focusRing\n  })};\n    }\n\n    &:not(:disabled):focus:not(:focus-visible) + span {\n      box-shadow: ${focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  })};\n    }\n\n    &:checked + span > svg:first-child {\n      opacity: 1;\n    }\n\n    &[data-read-only] + span {\n      background-color: ${color.default.readOnly.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.default.readOnly.border\n  })};\n      color: ${color.default.readOnly.fg};\n    }\n\n    &:not([data-read-only]):disabled + span {\n      background-color: ${color.default.disabled.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.default.disabled.border\n  })};\n      color: ${color.default.disabled.fg};\n    }\n\n    &:indeterminate + span > svg:last-child {\n      opacity: 1;\n    }\n  `;\n}\n\nexport { checkboxBaseStyles, inputElementStyles };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/primitives/checkbox/styles.js"],"names":["css","rem","focusRingBorderStyle","focusRingStyle","checkboxBaseStyles","inputElementStyles","props","theme","color","sanity","input","focusRing","radius","checkbox","size","default","enabled","border","width","bg","readOnly","fg","disabled"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,oBAAT,EAA+BC,cAA/B,QAAqD,uBAArD;;AACA,SAASC,kBAAT,GAA8B;AAC5B,SAAOJ,GAAI;AACb;AACA;AACA,GAHE;AAID;;AACD,SAASK,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,QAAME,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAmBE,KAAjC;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaD,IAAAA,KAAb;AAAoBE,IAAAA;AAApB,MAA+BL,KAAK,CAACE,MAA3C;AACA,SAAOT,GAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgBC,GAAG,CAACS,KAAK,CAACG,QAAN,CAAeC,IAAhB,CAAsB;AACzC,eAAeb,GAAG,CAACS,KAAK,CAACG,QAAN,CAAeC,IAAhB,CAAsB;AACxC;AACA,oBAAoBZ,oBAAoB,CAAC;AACrCM,IAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBC,MADQ;AAErCC,IAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC;AAFiB,GAAD,CAGnC;AACL,uBAAuBjB,GAAG,CAACW,MAAM,CAAC,CAAD,CAAP,CAAY;AACtC;AACA,0BAA0BJ,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBG,EAAG;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBhB,cAAc,CAAC;AAC/Bc,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC,KAAtB;AAA6BV,MAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBC;AAA1D,KADuB;AAE/BN,IAAAA;AAF+B,GAAD,CAG7B;AACL;AACA;AACA;AACA,oBAAoBT,oBAAoB,CAAC;AACrCM,IAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcC,OAAd,CAAsBC,MADQ;AAErCC,IAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC;AAFiB,GAAD,CAGnC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0BV,KAAK,CAACO,OAAN,CAAcK,QAAd,CAAuBD,EAAG;AACpD,oBAAoBjB,oBAAoB,CAAC;AACrCgB,IAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC,KADiB;AAErCV,IAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcK,QAAd,CAAuBH;AAFO,GAAD,CAGnC;AACL,eAAeT,KAAK,CAACO,OAAN,CAAcK,QAAd,CAAuBC,EAAG;AACzC;AACA;AACA;AACA,0BAA0Bb,KAAK,CAACO,OAAN,CAAcO,QAAd,CAAuBH,EAAG;AACpD,oBAAoBjB,oBAAoB,CAAC;AACrCgB,IAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC,KADiB;AAErCV,IAAAA,KAAK,EAAEA,KAAK,CAACO,OAAN,CAAcO,QAAd,CAAuBL;AAFO,GAAD,CAGnC;AACL,eAAeT,KAAK,CAACO,OAAN,CAAcO,QAAd,CAAuBD,EAAG;AACzC;AACA;AACA;AACA;AACA;AACA,GA/EE;AAgFD;;AACD,SACEjB,kBADF,EAEEC,kBAFF","sourcesContent":["import { css } from \"styled-components\";\nimport { rem } from \"../../styles\";\nimport { focusRingBorderStyle, focusRingStyle } from \"../../styles/internal\";\nfunction checkboxBaseStyles() {\n  return css`\n    position: relative;\n    display: inline-block;\n  `;\n}\nfunction inputElementStyles(props) {\n  const { theme } = props;\n  const color = theme.sanity.color.input;\n  const { focusRing, input, radius } = theme.sanity;\n  return css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n\n    & + span {\n      position: relative;\n      display: block;\n      height: ${rem(input.checkbox.size)};\n      width: ${rem(input.checkbox.size)};\n      box-sizing: border-box;\n      box-shadow: ${focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  })};\n      border-radius: ${rem(radius[2])};\n      line-height: 1;\n      background-color: ${color.default.enabled.bg};\n\n      & > svg {\n        display: block;\n        position: absolute;\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n\n        & > path {\n          vector-effect: non-scaling-stroke;\n          stroke-width: 2 !important;\n        }\n      }\n    }\n\n    &:not(:disabled):focus + span {\n      box-shadow: ${focusRingStyle({\n    border: { width: input.border.width, color: color.default.enabled.border },\n    focusRing\n  })};\n    }\n\n    &:not(:disabled):focus:not(:focus-visible) + span {\n      box-shadow: ${focusRingBorderStyle({\n    color: color.default.enabled.border,\n    width: input.border.width\n  })};\n    }\n\n    &:checked + span > svg:first-child {\n      opacity: 1;\n    }\n\n    &[data-read-only] + span {\n      background-color: ${color.default.readOnly.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.default.readOnly.border\n  })};\n      color: ${color.default.readOnly.fg};\n    }\n\n    &:not([data-read-only]):disabled + span {\n      background-color: ${color.default.disabled.bg};\n      box-shadow: ${focusRingBorderStyle({\n    width: input.border.width,\n    color: color.default.disabled.border\n  })};\n      color: ${color.default.disabled.fg};\n    }\n\n    &:indeterminate + span > svg:last-child {\n      opacity: 1;\n    }\n  `;\n}\nexport {\n  checkboxBaseStyles,\n  inputElementStyles\n};\n"]},"metadata":{},"sourceType":"module"}