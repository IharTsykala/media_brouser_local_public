{"ast":null,"code":"let id = 0;\nexport class ContentCard {\n  // @ts-ignore\n  constructor(id, name, src, description, checkbox, type, dimension, size) {\n    this.id = void 0;\n    this.name = void 0;\n    this.src = void 0;\n    this.description = void 0;\n    this.checkbox = void 0;\n    this.type = void 0;\n    this.dimension = void 0;\n    this.size = void 0;\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.id = id;\n    this.name = name;\n    this.src = src;\n    this.description = description;\n    this.checkbox = checkbox;\n    this.type = type;\n    this.dimension = dimension;\n    this.size = size;\n  }\n\n}\n\nconst getContentCards = imgArr => imgArr.map(src => new ContentCard(id++, \"some name\", src, \"some description\", false, \"image/png\", \"1280 * 720 px\", \"128 kb\"));\n\nexport default getContentCards;\nexport const findIndex = (id, arrayContentCard) => arrayContentCard.findIndex(contentCard => contentCard.id === id);\nexport const findCard = (id, arrayContentCard) => arrayContentCard.find(card => card.id === id);\nexport const getArrayBlobObjects = arrayFiles => arrayFiles.map(file => URL.createObjectURL(file));\nexport const onUploadClick = inputElement => {\n  var _inputElement$current;\n\n  return (_inputElement$current = inputElement.current) === null || _inputElement$current === void 0 ? void 0 : _inputElement$current.click();\n};\nexport const handlerUploadDocument = (e, setArrayContentCard, typeArrayContentCard) => {\n  var _e$target, _e$target$files;\n\n  const arrayFiles = (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$files = _e$target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) ? typeArrayContentCard === \"single\" ? [e.target.files[0]] : Array.from(e.target.files) : [];\n  const files = getArrayBlobObjects(arrayFiles);\n  setArrayContentCard(getContentCards(files));\n};\nexport const setValueCheckBox = (idCard, arrayContentCard, setArrayContentCard, statusHeaderForList, statusCommonCheckBox) => setArrayContentCard(arrayContentCard.map(contentCard => statusHeaderForList ? { ...contentCard,\n  checkbox: !statusCommonCheckBox\n} : contentCard.id === idCard ? { ...contentCard,\n  checkbox: !contentCard.checkbox\n} : contentCard));\nexport const removeImgFromGallery = (arrayContentCard, setArrayContentCard, id) => setArrayContentCard(arrayContentCard.filter(contentCard => id === \"checkBox\" ? !contentCard.checkbox : contentCard.id !== id));\nexport const handlerOnClickCheckBox = (statusHeaderForList, setStatusCommonCheckBox, statusCommonCheckBox, idCard, arrayContentCard, setArrayContentCard) => {\n  if (statusHeaderForList) {\n    setStatusCommonCheckBox(!statusCommonCheckBox);\n  }\n\n  setValueCheckBox(idCard, arrayContentCard, setArrayContentCard, statusHeaderForList, statusCommonCheckBox);\n};\nexport const handlerSetStatusDragAndDrop = (e, value, setStatusDragAndDrop) => {\n  e.stopPropagation();\n\n  if (setStatusDragAndDrop) {\n    setStatusDragAndDrop(value);\n  }\n};\nexport const getState = new URLSearchParams(window.location.search).get(\"state\");\nconst getCode = new URLSearchParams(window.location.search).get(\"code\");","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/src/services/functions/img.ts"],"names":["id","ContentCard","constructor","name","src","description","checkbox","type","dimension","size","getContentCards","imgArr","map","findIndex","arrayContentCard","contentCard","findCard","find","card","getArrayBlobObjects","arrayFiles","file","URL","createObjectURL","onUploadClick","inputElement","current","click","handlerUploadDocument","e","setArrayContentCard","typeArrayContentCard","target","files","Array","from","setValueCheckBox","idCard","statusHeaderForList","statusCommonCheckBox","removeImgFromGallery","filter","handlerOnClickCheckBox","setStatusCommonCheckBox","handlerSetStatusDragAndDrop","value","setStatusDragAndDrop","stopPropagation","getState","URLSearchParams","window","location","search","get","getCode"],"mappings":"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","sourcesContent":["import { InterfaceContentCard, Dispatch } from \"../interfacesAndTypes/common\"\nimport React from \"react\"\n\nlet id = 0\n\nexport class ContentCard implements InterfaceContentCard {\n  id: number | string\n  name: string\n  src: string\n  description: string\n  checkbox: boolean\n  type: string\n  dimension: string\n  size: string\n  // @ts-ignore\n  constructor(id, name, src, description, checkbox, type, dimension, size) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.id = id\n    this.name = name\n    this.src = src\n    this.description = description\n    this.checkbox = checkbox\n    this.type = type\n    this.dimension = dimension\n    this.size = size\n  }\n}\n\nconst getContentCards = (imgArr: string[]) =>\n  imgArr.map(\n    (src: string) =>\n      new ContentCard(id++, \"some name\", src, \"some description\", false, \"image/png\", \"1280 * 720 px\", \"128 kb\")\n  )\n\nexport default getContentCards\n\nexport const findIndex = (id: string | number, arrayContentCard: InterfaceContentCard[]) =>\n  arrayContentCard.findIndex((contentCard) => contentCard.id === id)\n\nexport const findCard = (id: string | number, arrayContentCard: InterfaceContentCard[]) =>\n  arrayContentCard.find((card: InterfaceContentCard) => card.id === id)\n\nexport const getArrayBlobObjects = (arrayFiles: File[]) => arrayFiles.map((file: {}) => URL.createObjectURL(file))\n\nexport const onUploadClick = (inputElement: React.RefObject<HTMLInputElement>) => inputElement.current?.click()\n\nexport const handlerUploadDocument = (\n  e: React.ChangeEvent<HTMLInputElement>,\n  setArrayContentCard: Dispatch<InterfaceContentCard[]>,\n  typeArrayContentCard?: string\n) => {\n  const arrayFiles = e?.target?.files?.[0]\n    ? typeArrayContentCard === \"single\"\n      ? [e.target.files[0]]\n      : Array.from(e.target.files)\n    : []\n  const files = getArrayBlobObjects(arrayFiles)\n  setArrayContentCard(getContentCards(files))\n}\n\nexport const setValueCheckBox = (\n  idCard: number | string,\n  arrayContentCard: InterfaceContentCard[],\n  setArrayContentCard: Dispatch<InterfaceContentCard[]>,\n  statusHeaderForList: boolean,\n  statusCommonCheckBox: boolean\n) =>\n  setArrayContentCard(\n    arrayContentCard.map((contentCard: InterfaceContentCard) =>\n      statusHeaderForList\n        ? { ...contentCard, checkbox: !statusCommonCheckBox }\n        : contentCard.id === idCard\n          ? { ...contentCard, checkbox: !contentCard.checkbox }\n          : contentCard\n    )\n  )\n\nexport const removeImgFromGallery = (\n  arrayContentCard: InterfaceContentCard[],\n  setArrayContentCard: Dispatch<InterfaceContentCard[]>,\n  id: string | number | null\n) =>\n  setArrayContentCard(\n    arrayContentCard.filter((contentCard) => (id === \"checkBox\" ? !contentCard.checkbox : contentCard.id !== id))\n  )\n\nexport const handlerOnClickCheckBox = (\n  statusHeaderForList: boolean,\n  setStatusCommonCheckBox: Dispatch<boolean>,\n  statusCommonCheckBox: boolean,\n  idCard: number | string,\n  arrayContentCard: InterfaceContentCard[],\n  setArrayContentCard: Dispatch<InterfaceContentCard[]>\n) => {\n  if (statusHeaderForList) {\n    setStatusCommonCheckBox(!statusCommonCheckBox)\n  }\n  setValueCheckBox(idCard, arrayContentCard, setArrayContentCard, statusHeaderForList, statusCommonCheckBox)\n}\n\nexport const handlerSetStatusDragAndDrop = (\n  e: React.MouseEvent<HTMLImageElement | HTMLDivElement>,\n  value: boolean,\n  setStatusDragAndDrop: Dispatch<boolean>\n) => {\n  e.stopPropagation()\n  if (setStatusDragAndDrop) {\n    setStatusDragAndDrop(value)\n  }\n}\n\nexport const getState = new URLSearchParams(window.location.search).get(\"state\")\nconst getCode = new URLSearchParams(window.location.search).get(\"code\")\n"]},"metadata":{},"sourceType":"module"}