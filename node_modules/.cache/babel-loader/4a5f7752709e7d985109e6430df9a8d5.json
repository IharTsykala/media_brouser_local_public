{"ast":null,"code":"import { EMPTY_ARRAY } from \"../constants\";\n\nfunction fillCSSObject(propKeys, value) {\n  return propKeys.reduce((obj, propKey) => {\n    obj[propKey] = value;\n    return obj;\n  }, {});\n}\n\nfunction rem(pixelValue) {\n  if (pixelValue === 0) return 0;\n  return `${pixelValue / 16}rem`;\n}\n\nfunction responsive(media, values, callback) {\n  const statements = values.map(callback);\n  return statements.map((statement, mediaIndex) => {\n    if (mediaIndex === 0) return statement;\n    return {\n      [`@media screen and (min-width: ${media[mediaIndex - 1]}px)`]: statement\n    };\n  });\n}\n\nfunction getResponsiveProp(val, defaultVal) {\n  if (val === void 0) return defaultVal || EMPTY_ARRAY;\n  return Array.isArray(val) ? val : [val];\n}\n\nfunction getResponsiveSpace(theme, props, spaceIndexes = EMPTY_ARRAY) {\n  if (!Array.isArray(spaceIndexes)) {\n    throw new Error(\"the property must be array of numbers\");\n  }\n\n  if (spaceIndexes.length === 0) {\n    return null;\n  }\n\n  return responsive(theme.sanity.media, spaceIndexes, spaceIndex => fillCSSObject(props, rem(theme.sanity.space[spaceIndex])));\n}\n\nexport { fillCSSObject, getResponsiveProp, getResponsiveSpace, rem, responsive };","map":{"version":3,"sources":["/home/ihartsykala/projects/playy/media_brouser_local_public/node_modules/@sanity/ui/lib/esm/styles/helpers.js"],"names":["EMPTY_ARRAY","fillCSSObject","propKeys","value","reduce","obj","propKey","rem","pixelValue","responsive","media","values","callback","statements","map","statement","mediaIndex","getResponsiveProp","val","defaultVal","Array","isArray","getResponsiveSpace","theme","props","spaceIndexes","Error","length","sanity","spaceIndex","space"],"mappings":"AAAA,SAASA,WAAT,QAA4B,cAA5B;;AACA,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,KAAjC,EAAwC;AACtC,SAAOD,QAAQ,CAACE,MAAT,CAAgB,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACvCD,IAAAA,GAAG,CAACC,OAAD,CAAH,GAAeH,KAAf;AACA,WAAOE,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID;;AACD,SAASE,GAAT,CAAaC,UAAb,EAAyB;AACvB,MAAIA,UAAU,KAAK,CAAnB,EACE,OAAO,CAAP;AACF,SAAQ,GAAEA,UAAU,GAAG,EAAG,KAA1B;AACD;;AACD,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAC3C,QAAMC,UAAU,GAAGF,MAAM,CAACG,GAAP,CAAWF,QAAX,CAAnB;AACA,SAAOC,UAAU,CAACC,GAAX,CAAe,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AAC/C,QAAIA,UAAU,KAAK,CAAnB,EACE,OAAOD,SAAP;AACF,WAAO;AAAE,OAAE,iCAAgCL,KAAK,CAACM,UAAU,GAAG,CAAd,CAAiB,KAAxD,GAA+DD;AAAjE,KAAP;AACD,GAJM,CAAP;AAKD;;AACD,SAASE,iBAAT,CAA2BC,GAA3B,EAAgCC,UAAhC,EAA4C;AAC1C,MAAID,GAAG,KAAK,KAAK,CAAjB,EACE,OAAOC,UAAU,IAAInB,WAArB;AACF,SAAOoB,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAAlC;AACD;;AACD,SAASI,kBAAT,CAA4BC,KAA5B,EAAmCC,KAAnC,EAA0CC,YAAY,GAAGzB,WAAzD,EAAsE;AACpE,MAAI,CAACoB,KAAK,CAACC,OAAN,CAAcI,YAAd,CAAL,EAAkC;AAChC,UAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;;AACD,MAAID,YAAY,CAACE,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,WAAO,IAAP;AACD;;AACD,SAAOlB,UAAU,CAACc,KAAK,CAACK,MAAN,CAAalB,KAAd,EAAqBe,YAArB,EAAoCI,UAAD,IAAgB5B,aAAa,CAACuB,KAAD,EAAQjB,GAAG,CAACgB,KAAK,CAACK,MAAN,CAAaE,KAAb,CAAmBD,UAAnB,CAAD,CAAX,CAAhE,CAAjB;AACD;;AACD,SACE5B,aADF,EAEEgB,iBAFF,EAGEK,kBAHF,EAIEf,GAJF,EAKEE,UALF","sourcesContent":["import { EMPTY_ARRAY } from \"../constants\";\nfunction fillCSSObject(propKeys, value) {\n  return propKeys.reduce((obj, propKey) => {\n    obj[propKey] = value;\n    return obj;\n  }, {});\n}\nfunction rem(pixelValue) {\n  if (pixelValue === 0)\n    return 0;\n  return `${pixelValue / 16}rem`;\n}\nfunction responsive(media, values, callback) {\n  const statements = values.map(callback);\n  return statements.map((statement, mediaIndex) => {\n    if (mediaIndex === 0)\n      return statement;\n    return { [`@media screen and (min-width: ${media[mediaIndex - 1]}px)`]: statement };\n  });\n}\nfunction getResponsiveProp(val, defaultVal) {\n  if (val === void 0)\n    return defaultVal || EMPTY_ARRAY;\n  return Array.isArray(val) ? val : [val];\n}\nfunction getResponsiveSpace(theme, props, spaceIndexes = EMPTY_ARRAY) {\n  if (!Array.isArray(spaceIndexes)) {\n    throw new Error(\"the property must be array of numbers\");\n  }\n  if (spaceIndexes.length === 0) {\n    return null;\n  }\n  return responsive(theme.sanity.media, spaceIndexes, (spaceIndex) => fillCSSObject(props, rem(theme.sanity.space[spaceIndex])));\n}\nexport {\n  fillCSSObject,\n  getResponsiveProp,\n  getResponsiveSpace,\n  rem,\n  responsive\n};\n"]},"metadata":{},"sourceType":"module"}